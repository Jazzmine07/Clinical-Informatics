<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>IsKlinika</title>

    <!-- Custom fonts for this template-->
    <link href="public/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="public/css/sb-admin-2.min.css" rel="stylesheet">

    <link rel='stylesheet' href='https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400;500;600;700&amp;display=swap'>
    <link rel="stylesheet" href="public/css/card/style.css">
    
    
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
    <style>
        #reportrange{
            display: inline-block;
            width: 100%;
            height: calc(1.5em + 0.75rem + 2px);
            padding: 0.375rem 1.75rem 0.375rem 0.75rem;
            font-size: 1rem;
            font-weight: 400;
            line-height: 1.5;
            color: #6e707e;
            vertical-align: middle;
            background: #ffff;
            border: 1px solid #d1d3e2;
            border-radius: 0.35rem;
        }
    </style>

</head>

<body id="page-top">

    <!-- Page Wrapper -->
    <div id="wrapper">

        <!-- Sidebar -->
        <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

            <!-- Sidebar - Brand -->
            <a class="sidebar-brand d-flex align-items-center justify-content-center" href="/dashboard" style="pointer-events: none; cursor: default;">
                <div class="sidebar-brand-icon rotate-n-15">
                    <i class="fas fa-user-md"></i>
                </div>
                <div class="sidebar-brand-text mx-3 text-capitalize">IsKlinika</div>
            </a>

            <!-- Divider -->
            <hr class="sidebar-divider my-0">

            {{#if isNurse}}
                <!-- Nav Item - Clinic Visit -->
                <li class="nav-item">
                    <a class="nav-link" href="/clinic-visit">
                        <i class="fas fa-fw fa-medkit"></i>
                        <span>Clinic Visit</span></a>
                </li>

                <!-- Nav Item - Profile -->
                <li class="nav-item">
                    <a class="nav-link" href="/profile">
                        <i class="fas fa-fw fa-user"></i>
                        <span>Student Profile</span></a>
                </li>

                <!-- Nav Item - Health Assessment -->
                <li class="nav-item">
                    <a class="nav-link" href="/health-assessment">
                        <i class="fas fa-fw fa-stethoscope"></i>
                        <span>Health Assessment</span></a>
                </li>

                <!-- Nav Item - Inventory -->
                <li class="nav-item">
                    <a href="#inventory" data-toggle="collapse" aria-expanded="false" class="dropdown-toggle nav-link">
                        <i class="fas fa-fw fa-archive"></i>
                        <span>Inventory</span></a>
                    <ul class="collapse list-unstyled" id="inventory">
                        <li>
                            <a class="nav-link" href="/inventory-medicine">
                                <i class="fas fa-fw fa-tablets"></i>
                                <span>Medicine</span></a>
                        </li>
                        <li>
                            <a class="nav-link" href="/inventory-supply">
                                <i class="fas fa-fw fa-pump-medical"></i>
                                <span>Supply</span></a>
                        </li>
                        <li>
                            <a class="nav-link" href="/inventory-dental">
                                <i class="fas fa-fw fa-tooth"></i>
                                <span>Dental</span></a>
                        </li>
                    </ul>
                </li>

                <!-- Nav Item - Promotive Care -->
                <li class="nav-item">
                    <a class="nav-link" href="/promotive-care">
                        <i class="fas fa-fw fa-child"></i>
                        <span>Promotive Care</span></a>
                </li>

                <!-- Nav Item - Performance Assessment -->
                <li class="nav-item">
                    <a class="nav-link" href="/performance-assessment">
                        <i class="fas fa-fw fa-star"></i>
                        <span>Performance Assessment</span></a>
                </li>

                <!-- Nav Item - Communications -->
                <li class="nav-item">
                    <a class="nav-link" href="/communications">
                        <i class="fas fa-fw fa-comments"></i>
                        <span>Communications</span></a>
                </li>
            {{else}}
                <!-- Nav Item - Dashboard -->
                <li class="nav-item">
                    <a class="nav-link" href="/dashboard">
                        <i class="fas fa-fw fa-tachometer-alt"></i>
                        <span>Dashboard</span></a>
                </li>
                
                <!-- Nav Item - Disease Surveillance -->
                <li class="nav-item active">
                    <a class="nav-link" href="/disease-surveillance">
                        <i class="fas fa-fw fa-virus"></i>
                        <span>Disease Surveillance</span></a>
                </li>

                <!-- Nav Item - Clinic Visit -->
                <li class="nav-item">
                    <a class="nav-link" href="/clinic-visit">
                        <i class="fas fa-fw fa-medkit"></i>
                        <span>Clinic Visit</span></a>
                </li>

                <!-- Nav Item - Profile -->
                <li class="nav-item">
                    <a class="nav-link" href="/profile">
                        <i class="fas fa-fw fa-user"></i>
                        <span>Student Profile</span></a>
                </li>

                <!-- Nav Item - Health Assessment -->
                <li class="nav-item">
                    <a class="nav-link" href="/health-assessment">
                        <i class="fas fa-fw fa-stethoscope"></i>
                        <span>Health Assessment</span></a>
                </li>

                <!-- Nav Item - Inventory -->
                <li class="nav-item">
                    <a href="#inventory" data-toggle="collapse" aria-expanded="false" class="dropdown-toggle nav-link">
                        <i class="fas fa-fw fa-archive"></i>
                        <span>Inventory</span></a>
                    <ul class="collapse list-unstyled" id="inventory">
                        <li>
                            <a class="nav-link" href="/inventory-medicine">
                                <i class="fas fa-fw fa-tablets"></i>
                                <span>Medicine</span></a>
                        </li>
                        <li>
                            <a class="nav-link" href="/inventory-supply">
                                <i class="fas fa-fw fa-pump-medical"></i>
                                <span>Supply</span></a>
                        </li>
                        <li>
                            <a class="nav-link" href="/inventory-dental">
                                <i class="fas fa-fw fa-tooth"></i>
                                <span>Dental</span></a>
                        </li>
                    </ul>
                </li>

                <!-- Nav Item - Promotive Care -->
                <li class="nav-item">
                    <a class="nav-link" href="/promotive-care">
                        <i class="fas fa-fw fa-child"></i>
                        <span>Promotive Care</span></a>
                </li>

                <!-- Nav Item - Performance Assessment -->
                <li class="nav-item">
                    <a class="nav-link" href="/performance-assessment">
                        <i class="fas fa-fw fa-star"></i>
                        <span>Performance Assessment</span></a>
                </li>

                <!-- Nav Item - Communications -->
                <li class="nav-item">
                    <a class="nav-link" href="/communications">
                        <i class="fas fa-fw fa-comments"></i>
                        <span>Communications</span></a>
                </li>
            {{/if}}

            <!-- Divider -->
            <hr class="sidebar-divider">
            
            <!-- Sidebar Toggler (Sidebar) -->
            <div class="text-center d-none d-md-inline">
                <button class="rounded-circle border-0" id="sidebarToggle"></button>
            </div>

        </ul>
        <!-- End of Sidebar -->

        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">

            <!-- Main Content -->
            <div id="content">

                <!-- Topbar -->
                <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">

                    <!-- Sidebar Toggle (Topbar) -->
                    <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                        <i class="fa fa-bars"></i>
                    </button>

                    <!-- Topbar Navbar -->
                    <ul class="navbar-nav ml-auto">

                        <!-- Nav Item - Search Dropdown (Visible Only XS) -->
                        <li class="nav-item dropdown no-arrow d-sm-none">
                            <a class="nav-link dropdown-toggle" href="#" id="searchDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-search fa-fw"></i>
                            </a>
                            <!-- Dropdown - Messages -->
                            <div class="dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in"
                                aria-labelledby="searchDropdown">
                                <form class="form-inline mr-auto w-100 navbar-search">
                                    <div class="input-group">
                                        <input type="text" class="form-control bg-light border-0 small"
                                            placeholder="Search for..." aria-label="Search"
                                            aria-describedby="basic-addon2">
                                        <div class="input-group-append">
                                            <button class="btn btn-primary" type="button">
                                                <i class="fas fa-search fa-sm"></i>
                                            </button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </li>

                        {{>notifications}}

                        <div class="topbar-divider d-none d-sm-block"></div>

                        <!-- Nav Item - User Information -->
                        <li class="nav-item dropdown no-arrow">
                            <a class="nav-link dropdown-toggle" href="#drop-menu" id="userDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="mr-2 d-none d-lg-inline text-gray-600 small">Welcome, {{user.firstName}} {{user.lastName}}!</span>
                                <img class="img-profile rounded-circle"
                                    src="public/img/undraw_profile.svg">
                            </a>
                            <!-- Dropdown - User Information -->
                            <div id="drop-menu" class="dropdown-menu dropdown-menu-right shadow animated--grow-in"
                                aria-labelledby="userDropdown">
                                <a class="dropdown-item" href="#">
                                    <i class="fas fa-cogs fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Settings
                                </a>
                                <a class="dropdown-item" href="#">
                                    <i class="fas fa-list fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Activity Log
                                </a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" data-toggle="modal" data-target="#logoutModal">
                                    <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Logout
                                </a>
                            </div>
                        </li>

                    </ul>

                </nav>
                <!-- End of Topbar -->                   

                <!-- Begin Page Content -->
                <div class="container-fluid">

                    <!-- Page Heading -->
                    <div class="d-sm-flex align-items-center justify-content-between mb-4">
                        <h1 class="h3 mb-0 text-gray-800">Disease Surveillance</h1>
                        <a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm"><i
                                class="fas fa-print fa-sm text-white-50"></i> Print</a>
                    </div>
                    <div class="row">
                        <div class="col-4 mb-4 d-flex justify-content-center">
                            <article class="leaderboard">
                                <header>
                                    <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 511.999 511.999" style="enable-background:new 0 0 511.999 511.999;" xml:space="preserve" class="leaderboard__icon" >
      <path d="M483.55,227.55H462c-50.68,0-76.07-61.27-40.23-97.11L437,115.19A28.44,28.44,0,0,0,396.8,75L381.56,90.22c-35.84,35.83-97.11,10.45-97.11-40.23V28.44a28.45,28.45,0,0,0-56.9,0V50c0,50.68-61.27,76.06-97.11,40.23L115.2,75A28.44,28.44,0,0,0,75,115.19l15.25,15.25c35.84,35.84,10.45,97.11-40.23,97.11H28.45a28.45,28.45,0,1,0,0,56.89H50c50.68,0,76.07,61.28,40.23,97.12L75,396.8A28.45,28.45,0,0,0,115.2,437l15.24-15.25c35.84-35.84,97.11-10.45,97.11,40.23v21.54a28.45,28.45,0,0,0,56.9,0V462c0-50.68,61.27-76.07,97.11-40.23L396.8,437A28.45,28.45,0,0,0,437,396.8l-15.25-15.24c-35.84-35.84-10.45-97.12,40.23-97.12h21.54a28.45,28.45,0,1,0,0-56.89ZM224,272a48,48,0,1,1,48-48A48,48,0,0,1,224,272Zm80,56a24,24,0,1,1,24-24A24,24,0,0,1,304,328Z"/></svg>

                                    <h1 class="leaderboard__title"><span class="leaderboard__title--top">Top 5 Diseases</span><span class="leaderboard__title--bottom">for The Week</span></h1>
                                </header>
                                
                                <main class="leaderboard__profiles">
                                    <article class="leaderboard__profile">
                                    <img src="public/img/one.png" class="leaderboard__picture">
                                    <span class="leaderboard__name">{{topDWeekOne.concern}}</span>
                                    <span class="leaderboard__value">{{topDWeekOne.count}}<span></span></span>
                                    </article>
                                    
                                    <article class="leaderboard__profile">
                                    <img src="public/img/two.png" class="leaderboard__picture">
                                    <span class="leaderboard__name">{{topDWeekTwo.concern}}</span>
                                    <span class="leaderboard__value">{{topDWeekTwo.count}}<span></span></span>
                                    </article>
                                    
                                    <article class="leaderboard__profile">
                                    <img src="public/img/three.png" class="leaderboard__picture">
                                    <span class="leaderboard__name">{{topDWeekThree.concern}}</span>
                                    <span class="leaderboard__value">{{topDWeekThree.count}}<span></span></span>
                                    </article>
                                    
                                    <article class="leaderboard__profile">
                                    <img src="public/img/four.png" class="leaderboard__picture">
                                    <span class="leaderboard__name">{{topDWeekFour.concern}}</span>
                                    <span class="leaderboard__value">{{topDWeekFour.count}}<span></span></span>
                                    </article>

                                    <article class="leaderboard__profile">
                                    <img src="public/img/five.png" class="leaderboard__picture">
                                    <span class="leaderboard__name">{{topDWeekFive.concern}}</span>
                                    <span class="leaderboard__value">{{topDWeekFive.count}}<span></span></span>
                                    </article>
                                </main>
                            </article>
                        </div>  
                        <div class="col-4 mb-4 d-flex justify-content-center">
                            <article class="leaderboard">
                                <header>
                                    <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 511.999 511.999" style="enable-background:new 0 0 511.999 511.999;" xml:space="preserve" class="leaderboard__icon" >
      <path d="M483.55,227.55H462c-50.68,0-76.07-61.27-40.23-97.11L437,115.19A28.44,28.44,0,0,0,396.8,75L381.56,90.22c-35.84,35.83-97.11,10.45-97.11-40.23V28.44a28.45,28.45,0,0,0-56.9,0V50c0,50.68-61.27,76.06-97.11,40.23L115.2,75A28.44,28.44,0,0,0,75,115.19l15.25,15.25c35.84,35.84,10.45,97.11-40.23,97.11H28.45a28.45,28.45,0,1,0,0,56.89H50c50.68,0,76.07,61.28,40.23,97.12L75,396.8A28.45,28.45,0,0,0,115.2,437l15.24-15.25c35.84-35.84,97.11-10.45,97.11,40.23v21.54a28.45,28.45,0,0,0,56.9,0V462c0-50.68,61.27-76.07,97.11-40.23L396.8,437A28.45,28.45,0,0,0,437,396.8l-15.25-15.24c-35.84-35.84-10.45-97.12,40.23-97.12h21.54a28.45,28.45,0,1,0,0-56.89ZM224,272a48,48,0,1,1,48-48A48,48,0,0,1,224,272Zm80,56a24,24,0,1,1,24-24A24,24,0,0,1,304,328Z"/></svg>

                                    <h1 class="leaderboard__title"><span class="leaderboard__title--top">Top 5 Diseases</span><span class="leaderboard__title--bottom">for The Month</span></h1>
                                </header>
                                
                                <main class="leaderboard__profiles">
                                    <article class="leaderboard__profile">
                                    <img src="public/img/one.png" class="leaderboard__picture">
                                    <span class="leaderboard__name">{{topDMonthOne.concern}}</span>
                                    <span class="leaderboard__value">{{topDMonthOne.count}}<span></span></span>
                                    </article>
                                    
                                    <article class="leaderboard__profile">
                                    <img src="public/img/two.png" class="leaderboard__picture">
                                    <span class="leaderboard__name">{{topDMonthTwo.concern}}</span>
                                    <span class="leaderboard__value">{{topDMonthTwo.count}}<span></span></span>
                                    </article>
                                    
                                    <article class="leaderboard__profile">
                                    <img src="public/img/three.png" class="leaderboard__picture">
                                    <span class="leaderboard__name">{{topDMonthThree.concern}}</span>
                                    <span class="leaderboard__value">{{topDMonthThree.count}}<span></span></span>
                                    </article>
                                    
                                    <article class="leaderboard__profile">
                                    <img src="public/img/four.png" class="leaderboard__picture">
                                    <span class="leaderboard__name">{{topDMonthFour.concern}}</span>
                                    <span class="leaderboard__value">{{topDMonthFour.count}}<span></span></span>
                                    </article>

                                    <article class="leaderboard__profile">
                                    <img src="public/img/five.png" class="leaderboard__picture">
                                    <span class="leaderboard__name">{{topDMonthFive.concern}}</span>
                                    <span class="leaderboard__value">{{topDMonthFive.count}}<span></span></span>
                                    </article>
                                </main>
                            </article>
                        </div>
                    </div>
                        {{!-- <div class="col-4 mb-4 d-flex justify-content-center">
                            <article class="leaderboard">
                                <header>
                                    <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 511.999 511.999" style="enable-background:new 0 0 511.999 511.999;" xml:space="preserve" class="leaderboard__icon" >
      <path d="M483.55,227.55H462c-50.68,0-76.07-61.27-40.23-97.11L437,115.19A28.44,28.44,0,0,0,396.8,75L381.56,90.22c-35.84,35.83-97.11,10.45-97.11-40.23V28.44a28.45,28.45,0,0,0-56.9,0V50c0,50.68-61.27,76.06-97.11,40.23L115.2,75A28.44,28.44,0,0,0,75,115.19l15.25,15.25c35.84,35.84,10.45,97.11-40.23,97.11H28.45a28.45,28.45,0,1,0,0,56.89H50c50.68,0,76.07,61.28,40.23,97.12L75,396.8A28.45,28.45,0,0,0,115.2,437l15.24-15.25c35.84-35.84,97.11-10.45,97.11,40.23v21.54a28.45,28.45,0,0,0,56.9,0V462c0-50.68,61.27-76.07,97.11-40.23L396.8,437A28.45,28.45,0,0,0,437,396.8l-15.25-15.24c-35.84-35.84-10.45-97.12,40.23-97.12h21.54a28.45,28.45,0,1,0,0-56.89ZM224,272a48,48,0,1,1,48-48A48,48,0,0,1,224,272Zm80,56a24,24,0,1,1,24-24A24,24,0,0,1,304,328Z"/></svg>

                                    <h1 class="leaderboard__title"><span class="leaderboard__title--top">Top 5 Diseases</span><span class="leaderboard__title--bottom">for The Year</span></h1>
                                </header>
                                
                                <main class="leaderboard__profiles">
                                    <article class="leaderboard__profile">
                                    <img src="https://cdn-icons.flaticon.com/png/512/4151/premium/4151657.png?token=exp=1641416344~hmac=dd68ce4463ea4140be0d1a28a3a5ac1b" class="leaderboard__picture">
                                    <span class="leaderboard__name">Mark Zuckerberg</span>
                                    <span class="leaderboard__value">35.7<span>B</span></span>
                                    </article>
                                    
                                    <article class="leaderboard__profile">
                                    <img src="https://cdn-icons.flaticon.com/png/512/4151/premium/4151837.png?token=exp=1641416410~hmac=62227e5d2e788bc0fcffefc1d71ffd6b" class="leaderboard__picture">
                                    <span class="leaderboard__name">Dustin Moskovitz</span>
                                    <span class="leaderboard__value">9.9<span>B</span></span>
                                    </article>
                                    
                                    <article class="leaderboard__profile">
                                    <img src="https://cdn-icons.flaticon.com/png/512/4151/premium/4151557.png?token=exp=1641416433~hmac=dab4523dc7e6f88ffba36cb0b607ba1b" class="leaderboard__picture">
                                    <span class="leaderboard__name">Elizabeth Holmes</span>
                                    <span class="leaderboard__value">4.5<span>B</span></span>
                                    </article>
                                    
                                    <article class="leaderboard__profile">
                                    <img src="https://cdn-icons.flaticon.com/png/512/4151/premium/4151693.png?token=exp=1641416455~hmac=2a8917ed117542b208408ef121be0f6a" class="leaderboard__picture">
                                    <span class="leaderboard__name">Evan Spiegel</span>
                                    <span class="leaderboard__value">2.1<span>B</span></span>
                                    </article>

                                    <article class="leaderboard__profile">
                                    <img src="https://cdn-icons.flaticon.com/png/512/4151/premium/4151632.png?token=exp=1641416480~hmac=d1231408285b1688f31ce4f17a5d8aad" class="leaderboard__picture">
                                    <span class="leaderboard__name">Evan Spiegel</span>
                                    <span class="leaderboard__value">2.1<span>B</span></span>
                                    </article>
                                </main>
                            </article>
                        </div>                     

                    

                    <div class="row">
                        <!-- Content Row -->
                        <div class="col-4 mb-4">
                            <div class="card border-left-primary shadow h-100 py-2">
                                
                                    <div class="row no-gutters align-items-center">


                                        <div class="col-md-1 ml-4">
                                            <i class="fas fa-virus fa-2x text-gray-300"></i>
                                        </div>

                                        <div class="col-md-10" style="margin-left: -20px;">
                                        <div class="card-body">
                                            <div class="col mr-2">
                                                <div class="h6 font-weight-bold text-primary mb-1">
                                                    Top Disease for The Week</div>
                                                <div class="h2 mb-0 font-weight-bold text-gray-800"> 
                                                        <span class="float-right">{{topDiagnosisWeek}}</span>
                                                </div>
                                            </div>
                                        </div>
                                        </div>
                                        
                                        
                                    </div>
                                
                            </div>
                        </div>
                        <div class="col-4 mb-4">
                            <div class="card border-left-primary shadow h-100 py-2">
                                <div class="card-body">
                                    <div class="row no-gutters align-items-center">
                                        <div class="col mr-2">
                                            <div class="h6 font-weight-bold text-primary mb-1">
                                                Top Disease for The Month</div>
                                            <div class="h2 mb-0 font-weight-bold text-gray-800">
                                                    <span class="float-right"> {{topDiagnosisMonth}} </span>
                                            </div>
                                        </div>
                                        
                                        <div class="col-auto">
                                            <i class="fas fa-virus fa-2x text-gray-300"></i>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>                           
                    </div> --}}
                    <div class="row">
                        <div class="col-4 mb-4">
                            <select class="custom-select" id="disease" name="disease">
                                <option disabled="disabled" selected="true">Communicable Disease</option>
                                <option value="chickenpox">Chickenpox</option>
                                <option value="common-cold">Common Cold</option>
                                <option value="common-cold">Fever</option>
                            </select>
                        </div>
                        <div class="col-4 mb-4">
                            <div id="reportrange">
                                <i class="fa fa-calendar"></i>&nbsp;
                                <span></span> <i class="fa fa-caret-down"></i>
                            </div>
                        </div> 
                    </div>
                    <div class="row">
                        {{!-- <div class="col-9">
                            <div class="card shadow mb-4">
                                <div class="card-header py-3">
                                    <h6 class="m-0 font-weight-bold text-primary">Disease Count by Grade Level</h6>
                                </div>
                                <div class="card-body" >
                                    <div class="chart-bar">
                                        <canvas id="gradeLevelChart"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div> --}}
                        <div class="col-xl-12 col-lg-12">
                            <div class="card shadow mb-4">
                                <div class="card-header py-3">
                                    <h6 class="m-0 font-weight-bold text-primary">Disease Trend</h6>
                                </div>
                                <div class="card-body" >
                                    <div class="chart-bar">
                                        <canvas id="diseaseTrendChart"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <!-- Bar Chart -->
                        <div class="col-xl-8 col-lg-8">
                            <div class="card shadow mb-4">
                                <!-- Card Header - Dropdown -->
                                <div
                                    class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                    <h6 class="m-0 font-weight-bold text-primary">Disease Count</h6>
                                </div>
                                <!-- Card Body -->
                                <div class="card-body">
                                    <div class="chart-area">
                                        <canvas id="diseaseCountDS"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Pie Chart -->
                        <div class="col-xl-4 col-lg-4">
                            <div class="card shadow mb-4">
                                <!-- Card Header - Dropdown -->
                                <div
                                    class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                    <h6 class="m-0 font-weight-bold text-primary">Disease Percentage</h6>
                                </div>

                                <!-- Pie Chart -->
                                <div class="card-body"  style="height: 360px">
                                    <div class="chart-pie pt-6 pb-2" style="width: 500px">
                                        <canvas id="diseaseCountDSPie"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xl-12 col-lg-12">
                            <div class="card shadow mb-4">
                                <div class="card-header py-3">
                                    <h6 class="m-0 font-weight-bold text-primary">Complaints Trend</h6>
                                </div>
                                <div class="card-body" >
                                    <div class="chart-bar">
                                        <canvas id="concernTrendChart"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <!-- Complaints Charts -->
                        <!-- Bar Chart -->
                        <div class="col-xl-8 col-lg-8">
                            <div class="card shadow mb-4">
                                <div class="card-header py-3">
                                    <h6 class="m-0 font-weight-bold text-primary">Complaints Count</h6>
                                </div>
                                <div class="card-body" style="width: 1100px;">
                                    <div class="chart-bar">
                                        <canvas id="complaintsChart"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Pie Chart -->
                        <div class="col-xl-4 col-lg-4">
                            <div class="card shadow mb-4">
                                <div class="card-header py-3">
                                    <h6 class="m-0 font-weight-bold text-primary">Complaints Percentage</h6>
                                </div>
                                <div class="card-body" style="height: 360px">
                                    <div class="chart-pie pt-6 pb-2" style="width: 500px">
                                        <canvas id="complaintsPieChart" style="height: 100%;"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Content Row -->
                </div>
                <!-- /.container-fluid -->

            </div>
            <!-- End of Main Content -->

            <!-- Footer -->
            <footer class="sticky-footer bg-white">
                <div class="container my-auto">
                    <div class="copyright text-center my-auto">
                        <span>Copyright &copy; IsKlinika 2021</span>
                    </div>
                </div>
            </footer>
            <!-- End of Footer -->

        </div>
        <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    <!-- Logout Modal-->
    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">x</span>
                    </button>
                </div>
                <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                    <form method="post" action="/logout">
                        <button class="btn btn-primary">Logout</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap core JavaScript-->
    <script src="public/vendor/jquery/jquery.min.js"></script>
    <script src="public/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="public/vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="public/js/sb-admin-2.min.js"></script>


    <!-- Page level plugins -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> 
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>
    <script src="https://unpkg.com/chart.js-plugin-labels-dv/dist/chartjs-plugin-labels.min.js"></script>

    <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <script  src="public/js/card/script.js"></script>

    <script type="text/javascript">

        var start = moment().subtract(29, 'days');
        var end = moment();
        var checker1 = false;
        var checker2 = false;
        var checker3 = false;

        var gradeLevelChart, gradeLevelPieChart;
        var symptomChart;
        var symptomPieChart;
        var diseaseTrendChart; 
        var concernTrendChart;

        cb(start, end);

        function cb(start, end) {
            $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            console.log("START " + start.format('YYYY-MM-DD'));
            console.log("END " + end.format('YYYY-MM-DD'));

            var disease =  $('#disease').find(":selected").text();
            console.log(disease);

            $.post("/getDiseaseDemographics",{disease:disease,startDate: start.format('YYYY-MM-DD'), endDate: end.format('YYYY-MM-DD')}, function(data){
                console.log("DS:");
                console.log(data);

                if(checker1){
                    gradeLevelChart.destroy();
                    gradeLevelPieChart.destroy();
                }

                showDiseaseChart(data, start.format('YYYY-MM-DD'), end.format('YYYY-MM-DD'));
                checker1 = true;
            });
            $.post("/getVisitReasonCountDashboard",{startDate: start.format('YYYY-MM-DD'), endDate: end.format('YYYY-MM-DD'),from:"dashboard"}, function(data){
                if(checker2){
                    symptomChart.destroy();
                    symptomPieChart.destroy();

                }
                showSymptomChart(data, start, end);
                checker2 = true;
            });
            $.post("/getDataForTrend",{startDate: start.format('YYYY-MM-DD'), endDate: end.format('YYYY-MM-DD')}, function(data){
                if(checker3){
                    diseaseTrendChart.destroy(); 
                    concernTrendChart.destroy();

                }
                showTrendChart(data,start,end);
                checker3 = true;
            });
        }

        function number_format(number, decimals, dec_point, thousands_sep) {
        // *     example: number_format(1234.56, 2, ',', ' ');
        // *     return: '1 234,56'
        number = (number + '').replace(',', '').replace(' ', '');
        var n = !isFinite(+number) ? 0 : +number,
            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
            sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
            s = '',
            toFixedFix = function(n, prec) {
            var k = Math.pow(10, prec);
            return '' + Math.round(n * k) / k;
            };
        // Fix for IE parseFloat(0.55).toFixed(0) = 0;
        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
        if (s[0].length > 3) {
            s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
        }
        if ((s[1] || '').length < prec) {
            s[1] = s[1] || '';
            s[1] += new Array(prec - s[1].length + 1).join('0');
        }
        return s.join(dec);
        }
        //remove this eventually
        function genderGradeChart(data){
            var glc;// = document.getElementById("myBarChart");
            var gradeLevelChart = new Chart(glc, {
                type: 'bar',
                data: {
                    labels: ["Grade 1", "Grade 2", "Grade 3", "Grade 4", "Grade 5", "Grade 6"],
                    datasets: [{
                        label: "Male",
                        backgroundColor: "#4e73df",
                        hoverBackgroundColor: "#0d6efd",
                        borderColor: "#0d6efd",
                        data: [data[0].male, data[1].male, data[2].male, data[3].male, data[4].male, data[5].male],
                    }, {
                        label: "Female",
                        backgroundColor: "#e74a3b",
                        hoverBackgroundColor: "#d52a1a",
                        borderColor: "#d52a1a",
                        data: [data[0].female, data[1].female, data[2].female, data[3].female, data[4].female, data[5].female],
                    }],
                },
                plugins: [ChartDataLabels],
                options: {
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            left: 10,
                            right: 25,
                            top: 25,
                            bottom: 0
                        }
                    },
                    //plugins: {
                    //    datalabels: {
                    //        anchor: 'center',
                    //        align: 'center',
                    //        font: {
                    //            weight: 'bold'
                    //        },
                    //       color: "#000000",
                    //    },
                    //    title: {
                    //        display: true,
                    //        text: 'Symptoms of this Month',
                    //        font: {
                    //            size: 25   // font size of the labels
                    //        },
                    //    }
                    //},
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'School Year',
                                font: {
                                    size: 15,   // font size of the labels
                                    weight: 'bold'
                                },
                            },
                            ticks: {
                                font: {
                                    size: 15   // font size of the labels
                                }
                            },
                            barThickness: 50,
                            maxBarThickness: 50,
                        },
                        y: {
                            title: {
                                display: true,
                                text: 'Weight in kg',
                                font: {
                                    size: 15,   // font size of the labels
                                    weight: 'bold'
                                },
                                color: "rgba(255, 99, 132, 1)",
                            },
                            ticks: {
                                font: {
                                    size: 15,   // font size of the labels
                                },
                                color: "rgba(255, 99, 132, 1)",
                                stepSize: 15,
                            }
                        }
                    }
                
                },
                tooltips: {
                    titleMarginBottom: 10,
                    titleFontColor: '#6e707e',
                    titleFontSize: 14,
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    caretPadding: 10,
                    callbacks: {
                        label: function(tooltipItem, chart) {
                        var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                        return datasetLabel + ": " + number_format(tooltipItem.yLabel);
                        }
                    }
                },
            });            
        }
        //Search specific Disease chart
        function showDiseaseChart(data, start, end) {
            //console.log(data);
            var i,j;
            var gradeName=["Grade 1", "Grade 2", "Grade 3", "Grade 4", "Grade 5", "Grade 6"];
            var g1Count=0, g2Count=0,g3Count=0, g4Count=0,g5Count=0, g6Count=0;
            var g1Sections=[],g2Sections=[],g3Sections=[],g4Sections=[],g5Sections=[],g6Sections=[];
            var g1SectionCount=[],g2SectionCount=[],g3SectionCount=[],g4SectionCount=[],g5SectionCount=[],g6SectionCount=[];
            var gradeLevel, gradeLevelPie;
            gradeLevelChart, gradeLevelPieChart;
            var selectedDisease = $('#disease').find(":selected").text();

            var date= new Date(start);
            var getStartMonth = date.toLocaleString('default', { month: 'long' })
            var startRange = getStartMonth + ' ' + date.getDate() + ', ' + date.getFullYear();

            var e = new Date(end);
            var getEndMonth = e.toLocaleString('default', { month: 'long' })
            var endRange = getEndMonth + ' ' + e.getDate() + ', ' + e.getFullYear();
                
            for(i=0;i<6;i++){
                //getting total count for each grade level
                g1Count=g1Count+data[0].grade1[i].count;
                g2Count=g2Count+data[1].grade2[i].count;
                g3Count=g3Count+data[2].grade3[i].count;
                g4Count=g4Count+data[3].grade4[i].count;
                g5Count=g5Count+data[4].grade5[i].count;
                g6Count=g6Count+data[5].grade6[i].count;
                //getting section names for labels 
                g1Sections.push(data[0].grade1[i].section);
                g2Sections.push(data[1].grade2[i].section);
                g3Sections.push(data[2].grade3[i].section);
                g4Sections.push(data[3].grade4[i].section);
                g5Sections.push(data[4].grade5[i].section);
                g6Sections.push(data[5].grade6[i].section);
                //grouping the counts for each section
                g1SectionCount.push(data[0].grade1[i].count);
                g2SectionCount.push(data[1].grade2[i].count);
                g3SectionCount.push(data[2].grade3[i].count);
                g4SectionCount.push(data[3].grade4[i].count);
                g5SectionCount.push(data[4].grade5[i].count);
                g6SectionCount.push(data[5].grade6[i].count);
            }

            var gradeCounts=[];
            var g1CountArr = [];
            var g2CountArr = [];
            gradeCounts.push(g1Count);
            gradeCounts.push(g2Count);
            gradeCounts.push(g3Count);
            gradeCounts.push(g4Count);
            gradeCounts.push(g5Count);
            gradeCounts.push(g6Count);

            var chartData = {
                labels: ["Grade 1", "Grade 2", "Grade 3", "Grade 4", "Grade 5", "Grade 6"],
                datasets: [{
                    label: "Grade Levels Disease Count",
                    backgroundColor: [
                        "rgba(153, 102, 255, 0.5)", // violet
                        "rgb(255, 159, 64)",  // orange
                        "rgb(255, 205, 86)",  // yellow
                        "#32CD32", // green
                        "rgb(54, 162, 235)", // blue
                        "rgb(255, 99, 132)", // red
                    ],
                    data:gradeCounts,
                }],
            };
            
            var grade1Sections={
                labels: g1Sections,
                datasets: [{
                    label: "Grade 1",
                    backgroundColor: [
                        '#c67aff', 
                        '#bf6bff', 
                        '#b85cff', 
                        '#af47ff',
                        '#a938ff', 
                        '#a229ff'
                    ],
                    data:g1SectionCount,
                }],
            }
            var grade2Sections={
                labels: g2Sections,
                datasets: [{
                    label: "Grade 2",
                    backgroundColor: [
                        '#ffc65c', 
                        '#ffbf47', 
                        '#ffb938', 
                        '#ffb429', 
                        '#ffad14', 
                        '#ffa805'
                    ],
                    data:g2SectionCount,
                }],
            }
            var grade3Sections={
                labels: g3Sections,
                datasets: [{
                    label: "Grade 3",
                    backgroundColor: [
                        '#ffeb7a', 
                        '#ffe96b', 
                        '#ffe75c', 
                        '#ffe347', 
                        '#ffe138', 
                        '#ffdf29'
                    ],
                    data:g3SectionCount,
                }],
            }
            var grade4Sections={
                labels: g4Sections,
                datasets: [{
                    label: "Grade 4",
                    backgroundColor: [
                        '#7aff7a', 
                        '#52ff52', 
                        '#00e600', 
                        '#00cc00', 
                        '#00b300', 
                        '#009400'
                    ],
                    data:g4SectionCount,
                }],
            }
            var grade5Sections={
                labels: g5Sections,
                datasets: [{
                    label: "Grade 5",
                    backgroundColor: [
                        '#2929ff', 
                        '#0505ff', 
                        '#0000e6', 
                        '#0000cc', 
                        '#0000b3', 
                        '#000094'
                    ],
                    data:g5SectionCount,
                }],
            }
            var grade6Sections={
                labels: g6Sections,
                datasets: [{
                    label: "Grade 6",
                    backgroundColor: [
                        '#ff7a7a', 
                        '#ff4242', 
                        '#ff0505', 
                        '#e60000', 
                        '#cc0000', 
                        '#b30000', 
                        '#940000'
                    ],
                    data:g6SectionCount,
                }],
            }

            var config={
                type: 'bar',
                data: chartData,
                options: {
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            left: 10,
                            right: 25,
                            bottom: 0
                        }
                    },
                    plugins: {
                        labels: {
                            render: 'value',
                            fontSize: 15,
                            fontStyle: 'bold',
                        },
                        title: {
                            display: true,
                            text: selectedDisease + ' Count from ' + startRange + ' to ' + endRange + ' by Grade Level',
                            font: {
                                size: 25   // font size of the labels
                            },
                        },
                        legend: {
                            display: false,
                        }
                    },
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Grade Level',
                                font: {
                                    size: 15,   // font size of the labels
                                    weight: 'bold'
                                },
                            },
                            ticks: {
                                font: {
                                    size: 15   // font size of the labels
                                }
                            },
                            barThickness: 50,
                            maxBarThickness: 50,
                        },
                        y: {
                            ticks: {
                                font: {
                                    size: 15,   // font size of the labels
                                },
                                stepSize: 5,
                            }
                        }
                    }
                
                }
            }

            var config2={
                type: 'pie',
                data: chartData,
                options: {
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            left: 10,
                            right: 25,
                        }
                    },  
                    plugins: {
                        labels: {
                            fontSize: 15,
                            fontStyle: 'bold',
                            render: (context) => {
                                const percentage = context.value / showData(this) * 100;
                                return percentage.toFixed(2)+"%";
                            },
                            fontColor: '#000000',
                            position: 'outside'
                        },
                        legend: {
                            display: true,
                            position: 'right',
                        }
                    }              
                }
            }
            function showData(){
                let totalSum = 0;
                let i = 0;

                for(i = 0; i < gradeLevelPieChart.config.data.datasets[0].data.length; i++){
                    if(gradeLevelPieChart.getDataVisibility(i) === true){
                        totalSum += gradeLevelPieChart.config.data.datasets[0].data[i];
                    }
                }
                return totalSum;
            }
            console.log(gradeCounts);

            gradeLevel = document.getElementById("diseaseCountDS");
            gradeLevelChart = new Chart(gradeLevel, config);   
            
            gradeLevelPie = document.getElementById("diseaseCountDSPie");
            gradeLevelPieChart = new Chart(gradeLevelPie, config2);  

            function clickHandler(click){
                const points= gradeLevelChart.getElementsAtEventForMode(click,'nearest',{ intersect:true},true);
                //const points2= gradeLevelPieChart.getElementsAtEventForMode(click,'nearest',{ intersect:true},true);
                if(points.length){
                    var firstPoint= points[0];
                    var firstPointPie= points[0];
                    
                    console.log(points[0]);
                    console.log(firstPoint.index);

                    var grade;
                    var labelColor;

                   // var con = data[0].arr[firstPoint.index].concern;                    
                    if( gradeLevelChart.config.data.datasets[0].label=="Grade Levels Disease Count"){
                        if(firstPoint.index === 0){
                            grade = "Grade 1";
                            gradeLevelChart.config.data=grade1Sections;
                            gradeLevelPieChart.config.data=grade1Sections;
                            labelColor = '#000000';
                            gradeLevelChart.config.options.plugins.title.text = selectedDisease + ' Count from ' + startRange + ' to ' + endRange +' by ' + grade + ' Sections';
                            gradeLevelPieChart.config.options.plugins.labels.fontColor = labelColor;                        }
                        else if(firstPoint.index === 1){
                            grade = "Grade 2";
                            gradeLevelChart.config.data=grade2Sections;
                            gradeLevelPieChart.config.data=grade2Sections;
                            labelColor = '#000000';
                            gradeLevelChart.config.options.plugins.title.text = selectedDisease + ' Count from ' + startRange + ' to ' + endRange +' by ' + grade + ' Sections';
                            gradeLevelPieChart.config.options.plugins.labels.fontColor = labelColor;
                        }
                        else if(firstPoint.index === 2){
                            grade = "Grade 3";
                            gradeLevelChart.config.data=grade3Sections;
                            gradeLevelPieChart.config.data=grade3Sections;
                            labelColor = '#000000';
                            gradeLevelChart.config.options.plugins.title.text = selectedDisease + ' Count from ' + startRange + ' to ' + endRange +' by ' + grade + ' Sections';
                            gradeLevelPieChart.config.options.plugins.labels.fontColor = labelColor;
                        }
                        else if(firstPoint.index === 3){
                            grade = "Grade 4";
                            gradeLevelChart.config.data=grade4Sections;
                            gradeLevelPieChart.config.data=grade4Sections;
                            labelColor = '#000000';
                            gradeLevelChart.config.options.plugins.title.text = selectedDisease + ' Count from ' + startRange + ' to ' + endRange +' by ' + grade + ' Sections';
                            gradeLevelPieChart.config.options.plugins.labels.fontColor = labelColor;
                        }
                        else if(firstPoint.index === 4){
                            grade = "Grade 5";
                            gradeLevelChart.config.data=grade5Sections;
                            gradeLevelPieChart.config.data=grade5Sections;
                            labelColor = '#000000';
                            gradeLevelChart.config.options.plugins.title.text = selectedDisease + ' Count from ' + startRange + ' to ' + endRange +' by ' + grade + ' Sections';
                            gradeLevelPieChart.config.options.plugins.labels.fontColor = labelColor;
                        }
                        else if(firstPoint.index === 5){
                            grade = "Grade 6";
                            gradeLevelChart.config.data=grade6Sections;
                            gradeLevelPieChart.config.data=grade6Sections;
                            labelColor = '#000000';
                            gradeLevelChart.config.options.plugins.title.text = selectedDisease + ' Count from ' + startRange + ' to ' + endRange +' by ' + grade + ' Sections';
                            gradeLevelPieChart.config.options.plugins.labels.fontColor = labelColor;
                        }
                        gradeLevelChart.update();
                        gradeLevelPieChart.update();
                    }
                }
            }

            gradeLevel.onclick=clickHandler;
            //gradeLevelPie.onclick=clickHandler;
            
        }
        //Show Symptoms Count (whole, grade level view, each section for grade levvel)
        function showSymptomChart(data, start, end) {
            //console.log(data);
            var i,j;
            var gLabels,gDataCount=[],sLabels=[],sDataCount=[];
            var labels=[],dataCount=[];
            var temp=[]; 

            var date= new Date(start);
            var getStartMonth = date.toLocaleString('default', { month: 'long' })
            var startRange = getStartMonth + ' ' + date.getDate() + ', ' + date.getFullYear();

            var e = new Date(end);
            var getEndMonth = e.toLocaleString('default', { month: 'long' })
            var endRange = getEndMonth + ' ' + e.getDate() + ', ' + e.getFullYear();

            for(i=0;i<data[0].arr.length;i++){
                temp.push({
                    labels:data[0].arr[i].concern,
                    count: data[0].arr[i].count
                })
            }
            temp= temp.sort(function (x, y) {
                return y.count- x.count;
            });
            console.log(temp);
            if(temp.length<=5){
                for(i=0;i<temp.length;i++){
                    labels.push(temp[i].labels); //labels array are the concerns
                    dataCount.push(temp[i].count); // dataCount array are the counts for each concern
                }
            }
            else{
                for(i=0;i<5;i++){
                    labels.push(temp[i].labels); //labels array are the concerns
                    dataCount.push(temp[i].count); // dataCount array are the counts for each concern
                }
            }

            console.log(labels);
            console.log(dataCount);
            var temp,temp2,temp3;
            var filteredData=[];
            
        
            var gradeName=["Grade 1", "Grade 2", "Grade 3", "Grade 4", "Grade 5", "Grade 6"]; //labels for each grade level
            
            var symptomsCount={
                labels: labels,
                datasets: [{
                    label: "Symptom Count",
                    backgroundColor: [
                        "#00b300", // green
                        "#ff3399",  // pink
                        "#00d1d1",  // cyan
                        "#000070",  // navy blue
                        "#008585",  // teal
                    ],
                    data: dataCount,
                }],
            };
            

            var gradeCount = {
                labels: gradeName,
                datasets: [{
                    label: "Grade Level Symptom Count",
                    // background color of complaints
                    backgroundColor: [
                        "rgba(153, 102, 255, 0.5)", // violet
                        "rgb(255, 159, 64)",  // orange
                        "rgb(255, 205, 86)",  // yellow
                        "#32CD32", // green
                        "rgb(54, 162, 235)", // blue
                        "rgb(255, 99, 132)", // red
                    ],
                    data:gDataCount,
                }],
            };

            

            var config={
                type: 'bar',
                data:symptomsCount,
                options: {
                    maintainAspectRatio: false,
                    plugins: {
                        labels: {
                            render: 'value',
                            fontSize: 15,
                            fontStyle: 'bold',
                            fontColor: 'black'
                        },
                        title: {
                            display: true,
                            text: 'Top 5 Complaints from '+ startRange + ' to ' + endRange,
                            font: {
                                size: 25   // font size of the chart title
                            },
                        },
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Complaint',
                                font: {
                                    size: 15,   // font size of the labels
                                    weight: 'bold'
                                },
                            },
                            ticks: {
                                font: {
                                    size: 15   // font size of the labels
                                }
                            },
                            barThickness: 50,
                            maxBarThickness: 50,
                        },
                        y: {
                            ticks: {
                                font: {
                                    size: 15,   // font size of the labels
                                },
                                stepSize: 5,
                            }
                        }
                    }
                }
            }
            var configPie={
                type: 'pie',
                data: symptomsCount,
                options: {
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            left: 10,
                            right: 25,
                            top: 25,
                        }
                    },
                    plugins: {
                        labels: {
                            fontSize: 15,
                            fontStyle: 'bold',
                            render: (context) => {
                                const percentage = context.value / showDataComplaints(this) * 100;
                                return percentage.toFixed(2)+"%";
                            },
                            fontColor: '#000000',
                            position: 'outside'
                        },
                        legend: {
                            display: true,
                            position: 'right',
                        }
                    }
                }
            }            

            function showDataComplaints(){
                let totalSum = 0;
                let i = 0;

                for(i = 0; i < symptomPieChart.config.data.datasets[0].data.length; i++){
                    if(symptomPieChart.getDataVisibility(i) === true){
                        totalSum += symptomPieChart.config.data.datasets[0].data[i];
                    }
                }
                return totalSum;
            }
            
            var complaints = document.getElementById("complaintsChart");
            symptomChart = new Chart(complaints, config); 
            var complaints2 = document.getElementById("complaintsPieChart");
            symptomPieChart = new Chart(complaints2, configPie);   

            var concern=[];
            var checker3 = 0;

            function clickHandlerSC(click){
                //console.log(data[1].arr2);
                const points= symptomChart.getElementsAtEventForMode(click,'nearest',{ intersect:true},true);
                if(points.length){
                    var firstPoint= points[0];
                    console.log(points[0]);
                    console.log(firstPoint.index);
                    console.log(data[1].arr2.length);
                    var con = labels[firstPoint.index];
                    
                    concern.push(con);
                    var i;
                    var grade;
                    var labelColor;
                    var barColorBackground = [];
                    
                    if(symptomChart.config.data.datasets[0].label=="Symptom Count"){
                        temp=[{count:0},{count:0},{count:0},{count:0},{count:0},{count:0}];
                        console.log("Symptom Count");
                        
                        if(firstPoint._index === 0){
                            console.log(concern[0]);

                            for(i=0;i<data[1].arr2.length;i++){
                                if(concern[0].toLowerCase() == data[1].arr2[i].visitReason.toLowerCase()){
                                    if(data[1].arr2[i].grade == "1")
                                        temp[0].count=temp[0].count+1;
                                    else if(data[1].arr2[i].grade == "2")
                                        temp[1].count=temp[1].count+1;
                                    else if(data[1].arr2[i].grade == "3")
                                        temp[2].count=temp[2].count+1;
                                    else if(data[1].arr2[i].grade == "4")
                                        temp[3].count=temp[3].count+1;
                                    else if(data[1].arr2[i].grade == "5")
                                        temp[4].count=temp[4].count+1;
                                    else if(data[1].arr2[i].grade == "6")
                                        temp[5].count=temp[5].count+1;
                                    filteredData.push(data[1].arr2[i]);
                                }
                            }
                            //console.log(temp);
                            for(i=0;i<temp.length;i++){
                                gDataCount.push(temp[i].count);
                            }                       
                            //console.log("gDataCount");     
                            //console.log(gDataCount);
                            symptomChart.config.data = gradeCount;
                            symptomPieChart.config.data = gradeCount;
                            symptomChart.config.options.plugins.title.text = con + ' Complaints from ' + startRange + ' to ' + endRange +' by Grade Level';
                            symptomPieChart.config.options.plugins.labels.fontColor = "#000000";
                        }
                        else{
                            for(i=0;i<data[1].arr2.length;i++){
                                console.log(concern[0]);
                                if(concern[0].toLowerCase() == data[1].arr2[i].visitReason.toLowerCase()){
                                    //console.log(data[1].arr2[i].grade)
                                    if(data[1].arr2[i].grade == "1")
                                        temp[0].count=temp[0].count+1;
                                    else if(data[1].arr2[i].grade == "2")
                                        temp[1].count=temp[1].count+1;
                                    else if(data[1].arr2[i].grade == "3")
                                        temp[2].count=temp[2].count+1;
                                    else if(data[1].arr2[i].grade == "4")
                                        temp[3].count=temp[3].count+1;
                                    else if(data[1].arr2[i].grade == "5")
                                        temp[4].count=temp[4].count+1;
                                    else if(data[1].arr2[i].grade == "6")
                                        temp[5].count=temp[5].count+1;
                                    filteredData.push(data[1].arr2[i]);
                                }
                            }
                            
                            for(i=0;i<temp.length;i++){
                                gDataCount.push(temp[i].count);
                            }                       
                            
                            symptomChart.config.data = gradeCount;
                            console.log("Symptom Name:");
                            
                            console.log(symptomChart.config.data.labels[firstPoint.index]);
                            symptomPieChart.config.data = gradeCount;
                            symptomPieChart.config.options.plugins.labels.fontColor = "#000000";
                            symptomChart.config.options.plugins.title.text = concern[0] + ' Complaints from ' + startRange + ' to ' + endRange +' by Grade Level';
                        }
                    }
                    else if(symptomChart.config.data.datasets[0].label=="Grade Level Symptom Count"){
                        console.log("Grade Level Symptom Count");
                        console.log("FILTERED DATA");
                        console.log(filteredData);
                        
                        temp2=[{count:0},{count:0},{count:0},{count:0},{count:0},{count:0}];
                        for(i=0;i<6;i++){
                            sLabels.pop();
                        }
                        if(firstPoint.index === 0){
                            grade = "Grade 1";
                            sLabels.push("Truthfulness");
                            sLabels.push("Sincerity");
                            sLabels.push("Honesty");
                            sLabels.push("Faithfulness");
                            sLabels.push("Humility");
                            sLabels.push("Politeness");
                            for(i=0;i<filteredData.length;i++){
                                if(filteredData[i].grade == "1"){
                                    if(filteredData[i].section == "Truthfulness")
                                    temp2[0].count=temp2[0].count+1;
                                    else if(filteredData[i].section == "Sincerity")
                                        temp2[1].count=temp2[1].count+1;
                                    else if(filteredData[i].section == "Honesty")
                                        temp2[2].count=temp2[2].count+1;
                                    else if(filteredData[i].section == "Faithfulness")
                                        temp2[3].count=temp2[3].count+1;
                                    else if(filteredData[i].section == "Humility")
                                        temp2[4].count=temp2[4].count+1;
                                    else if(filteredData[i].section == "Politeness")
                                        temp2[5].count=temp2[5].count+1;
                                }
                            }
                            barColorBackground.push('#c67aff', '#bf6bff', '#b85cff', '#af47ff','#a938ff', '#a229ff');
                            labelColor = '#000000';
                        }
                        else if(firstPoint.index === 1){
                            grade = "Grade 2";
                            sLabels.push("Simplicity");
                            sLabels.push("Charity");
                            sLabels.push("Helpfulness");
                            sLabels.push("Gratefulness");
                            sLabels.push("Gratitude");
                            sLabels.push("Meekness");
                            for(i=0;i<filteredData.length;i++){
                                if(filteredData[i].grade == "2"){
                                    if(filteredData[i].section == "Simplicity")
                                        temp2[0].count=temp2[0].count+1;
                                    else if(filteredData[i].section == "Charity")
                                        temp2[1].count=temp2[1].count+1;
                                    else if(filteredData[i].section == "Helpfulness")
                                        temp2[2].count=temp2[2].count+1;
                                    else if(filteredData[i].section == "Gratefulness")
                                        temp2[3].count=temp2[3].count+1;
                                    else if(filteredData[i].section == "Gratitude")
                                        temp2[4].count=temp2[4].count+1;
                                    else if(filteredData[i].section == "Meekness")
                                        temp2[5].count=temp2[5].count+1;
                                }
                            }
                            barColorBackground.push('#ffc65c', '#ffbf47', '#ffb938', '#ffb429', '#ffad14', '#ffa805');
                            labelColor = '#000000';
                        }
                        else if(firstPoint.index === 2){
                            grade = "Grade 3";
                            sLabels.push("Respect");
                            sLabels.push("Courtesy");
                            sLabels.push("Trust");
                            sLabels.push("Kindness");
                            sLabels.push("Piety");
                            sLabels.push("Prayerfulness");
                            for(i=0;i<filteredData.length;i++){
                                if(filteredData[i].grade == "3"){
                                    if(filteredData[i].section == "Respect")
                                        temp2[0].count=temp2[0].count+1;
                                    else if(filteredData[i].section == "Courtesy")
                                        temp2[1].count=temp2[1].count+1;
                                    else if(filteredData[i].section == "Trust")
                                        temp2[2].count=temp2[2].count+1;
                                    else if(filteredData[i].section == "Kindness")
                                        temp2[3].count=temp2[3].count+1;
                                    else if(filteredData[i].section == "Piety")
                                        temp2[4].count=temp2[4].count+1;
                                    else if(filteredData[i].section == "Prayerfulness")
                                        temp2[5].count=temp2[5].count+1;
                                }
                            }
                            barColorBackground.push('#ffeb7a', '#ffe96b', '#ffe75c', '#ffe347', '#ffe138', '#ffdf29');
                            labelColor = '#000000';
                        }
                        else if(firstPoint.index === 3){
                            grade = "Grade 4";
                            sLabels.push("Unity");
                            sLabels.push("Purity");
                            sLabels.push("Fidelity");
                            sLabels.push("Equality");
                            sLabels.push("Harmony");
                            sLabels.push("Solidarity");
                            
                            for(i=0;i<filteredData.length;i++){
                                if(filteredData[i].grade == "4"){
                                    if(filteredData[i].section == "Unity")
                                        temp2[0].count=temp2[0].count+1;
                                    else if(filteredData[i].section == "Purity")
                                        temp2[1].count=temp2[1].count+1;
                                    else if(filteredData[i].section == "Fidelity")
                                        temp2[2].count=temp2[2].count+1;
                                    else if(filteredData[i].section == "Equality")
                                        temp2[3].count=temp2[3].count+1;
                                    else if(filteredData[i].section == "Harmony")
                                        temp2[4].count=temp2[4].count+1;
                                    else if(filteredData[i].section == "Solidarity")
                                        temp2[5].count=temp2[5].count+1;
                                }
                            }
                            barColorBackground.push('#7aff7a', '#52ff52', '#00e600', '#00cc00', '#00b300', '#009400');
                            labelColor = '#000000';
                        }
                        else if(firstPoint.index === 4){
                            grade = "Grade 5";
                            sLabels.push("Trustworthiness");
                            sLabels.push("Reliability");
                            sLabels.push("Dependability");
                            sLabels.push("Responsibility");
                            sLabels.push("Serenity");
                            sLabels.push("Flexibility");
            
                            for(i=0;i<filteredData.length;i++){
                                if(filteredData[i].grade == "5"){
                                    if(filteredData[i].section == "Trustworthiness")
                                        temp2[0].count=temp2[0].count+1;
                                    else if(filteredData[i].section == "Reliability")
                                        temp2[1].count=temp2[1].count+1;
                                    else if(filteredData[i].section == "Dependability")
                                        temp2[2].count=temp2[2].count+1;
                                    else if(filteredData[i].section == "Responsibility")
                                        temp2[3].count=temp2[3].count+1;
                                    else if(filteredData[i].section == "Serenity")
                                        temp2[4].count=temp2[4].count+1;
                                    else if(filteredData[i].section == "Flexibility")
                                        temp2[5].count=temp2[5].count+1;
                                }
                            }
                            barColorBackground.push('#2929ff', '#0505ff', '#0000e6', '#0000cc', '#0000b3', '#000094');
                            labelColor = '#000000';
                        }
                        else if(firstPoint.index === 5){
                            grade = "Grade 6";
                            sLabels.push("Self-Discipline");
                            sLabels.push("Abnegation");
                            sLabels.push("Self-Giving");
                            sLabels.push("Integrity");
                            sLabels.push("Perseverance");
                            sLabels.push("Patience");
                            
                            for(i=0;i<filteredData.length;i++){
                                if(filteredData[i].grade == "6"){
                                    if(filteredData[i].section == "Self-Discipline")
                                        temp2[0].count=temp2[0].count+1;
                                    else if(filteredData[i].section == "Abnegation")
                                        temp2[1].count=temp2[1].count+1;
                                    else if(filteredData[i].section == "Self-Giving")
                                        temp2[2].count=temp2[2].count+1;
                                    else if(filteredData[i].section == "Integrity")
                                        temp2[3].count=temp2[3].count+1;
                                    else if(filteredData[i].section == "Perseverance")
                                        temp2[4].count=temp2[4].count+1;
                                    else if(filteredData[i].section == "Patience")
                                        temp2[5].count=temp2[5].count+1;
                                }
                            }
                            barColorBackground.push('#ff7a7a', '#ff4242', '#ff0505', '#e60000', '#cc0000', '#b30000', '#940000');
                            labelColor = '#000000';
                        }
                        console.log(temp2);
                        for(i=0;i<temp2.length;i++){
                            sDataCount.push(temp2[i].count);
                        }                       
                        console.log("sDataCount");     
                        console.log(sDataCount);

                        var sectionCount={
                            labels: sLabels,
                            datasets: [{
                                label: "Section Symptom Count",
                                // background color of grade levels
                                backgroundColor: barColorBackground,
                                data: sDataCount,
                            }],
                        };
                        
                        symptomChart.config.data = sectionCount;
                        symptomPieChart.config.data = sectionCount;
                        symptomPieChart.config.options.plugins.labels.fontColor = labelColor;
                        symptomChart.config.options.plugins.title.text = concern[0] + ' Complaints from ' + startRange + ' to ' + endRange +' by ' + grade + ' Sections';
                        //symptomChart.config.options.plugins.title.font.size = 20;
                    }
                    else if(symptomChart.config.data.datasets[0].label=="Section Symptom Count"){
                        //symptomChart.config.data = symptomsCount;
                        //symptomPieChart.config.data = symptomsCount;
                        
                    }
                    
                    symptomChart.update();
                    symptomPieChart.update();
                }
            }

            complaints.onclick=clickHandlerSC;
            //complaints2.onclick=clickHandlerSC;
        };            

        function showTrendChart(data,start,end){
            console.log("enters Show Disease Trend Chart");
            var i,j,k,s;
            var dateLabels=[];
            var dDataSet=[],cDataSet=[];
            var dTotalDataCount=[],cTotalDataCount=[];
            var checkSeparation=[], separationCount;
            var dCounter=0,cCounter=0;

            var date= new Date(start);
            var getStartMonth = date.toLocaleString('default', { month: 'long' })
            var startRange = getStartMonth + ' ' + date.getDate() + ', ' + date.getFullYear();

            var e = new Date(end);
            var getEndMonth = e.toLocaleString('default', { month: 'long' })
            var endRange = getEndMonth + ' ' + e.getDate() + ', ' + e.getFullYear();
            
            var filling=[];
            var alreadyAdded=0;
            var dSets=[], cSets=[];
            
            var diseaseColors = [
                "#e600e6",  // magenta
                "#7fffd4",  // aquamarine
                "#c2c200",  // olive
                "#b87333",  // brown
                "#000000",  // black
            ]
            
            var complaintsColor = [
                "#00b300", // green
                "#ff3399",  // pink
                "#00d1d1",  // cyan
                "#000070",  // navy blue
                "#008585",  // teal
            ]

            //gets all the date in the date range (THIS IS FOR BOTH THE DISEASE TREND AND VISIT REASONS)
            while(date<=e){
                if(date.getDate()>=10 && (date.getMonth()+1)>=10){
                    dateLabels.push(date.getFullYear() + "-" + (date.getMonth()+1) + "-" +date.getDate());
                }
                else if(date.getDate()>=10 && (date.getMonth()+1)<10){
                    dateLabels.push(date.getFullYear() + "-0" + (date.getMonth()+1) + "-" +date.getDate());
                }
                else if(date.getDate()<10 && (date.getMonth()+1)>=10){
                   dateLabels.push(date.getFullYear() + "-" + (date.getMonth()+1) + "-0" +date.getDate());
                }
                else if(date.getDate()<10 && (date.getMonth()+1)<10){
                    dateLabels.push(date.getFullYear() + "-0" + (date.getMonth()+1) + "-0" +date.getDate());
                }
                
                date.setDate(date.getDate()+1);
            }
            
            //------------------STUFF OF DISEASE LINE CHART------------------
            //creates the array for dataset
            console.log("DIAGNOSIS PARTS")
            for(i=0;i<data.length;i++){
                alreadyAdded=0
                if(dDataSet==null){ //if empty auto add
                    if(data[i].diagnosis!="" && data[i].diagnosis!=undefined && data[i].diagnosis!=null){
                        checkSeparation=data[i].diagnosis.split(", ");
                        for(s=0;s<checkSeparation.length;s++){
                            dDataSet.push({
                                diagnosis:checkSeparation[s],
                                dates: dateLabels,
                                count: [parseInt("0")]
                            })
                            dTotalDataCount.push({
                                diagnosis:checkSeparation[s],
                                count: parseInt("0")
                            })
                        }                        
                    }
                }
                else{ //if not empty
                    if(data[i].diagnosis!="" && data[i].diagnosis!=undefined && data[i].diagnosis!=null){
                        checkSeparation=data[i].diagnosis.split(", ");
                        for(s=0;s<checkSeparation.length;s++){
                            alreadyAdded=0;
                             for(j=0;j<dDataSet.length;j++){ //this whole thing is used to check if it has a count
                                if(dDataSet[j].diagnosis.toLowerCase()==checkSeparation[s].toLowerCase()){
                                    alreadyAdded=1;
                                }
                            }
                            if(alreadyAdded==0){
                                dDataSet.push({
                                    diagnosis:checkSeparation[s],
                                    dates: dateLabels,
                                    count: [parseInt("0")]
                                })
                                dTotalDataCount.push({
                                    diagnosis:checkSeparation[s],
                                    count: parseInt("0")
                                })
                            }
                        }                        
                    }
                }
            }
            for(i=0;i<dDataSet.length;i++){
                for(j=0;j<dateLabels.length;j++){
                    dDataSet[i].count.push(parseInt("0"));
                }
            }
            console.log("data");
            for(i=0;i<data.length;i++){
                console.log(data[i].diagnosis);
            }
            console.log("dDataSet");
            console.log(dDataSet);
            //counting of data Disease
            for(i=0;i<data.length;i++){
                if(data[i].diagnosis!="" && data[i].diagnosis!=undefined && data[i].diagnosis!=null){
                    checkSeparation=data[i].diagnosis.split(", ");
                    separationCount=checkSeparation.length;
                    for(s=0;s<separationCount;s++){
                        for(k=0;k<dateLabels.length;k++){
                            if(data[i].visitDate==dateLabels[k]){
                                for(dCounter=0;dCounter<dDataSet.length;dCounter++){
                                    if(dDataSet[dCounter].diagnosis == checkSeparation[s]){
                                        dDataSet[dCounter].count[k]=dDataSet[dCounter].count[k]+1;
                                        dTotalDataCount[dCounter].count=dTotalDataCount[dCounter].count+1;
                                    }
                                }
                            }
                        
                        }
                    }
                }
            }
            console.log(dTotalDataCount);
            
            
            dTotalDataCount= dTotalDataCount.sort(function (x, y) {
                return y.count- x.count;
            });
            
            console.log("Check:");
            console.log(dTotalDataCount);
            console.log(dDataSet);
            
            if(dTotalDataCount.length<=5){
                for(i=0;i<dDataSet.length;i++){
                    for(j=0;j<dTotalDataCount.length;j++){
                        console.log(dTotalDataCount[j].diagnosis);
                        console.log("---");
                        console.log(dDataSet[i].diagnosis);
                        if(dTotalDataCount[j].diagnosis.toLowerCase()==dDataSet[i].diagnosis.toLowerCase()){
                            dSets.push({
                                label: dDataSet[i].diagnosis,   
                                borderColor: diseaseColors[i],
                                backgroundColor: diseaseColors[i],
                                data:dDataSet[i].count,
                            })
                        }
                    }
                };
            }
            else{
                for(i=0;i<dDataSet.length;i++){
                    for(j=0;j<5;j++){
                        console.log(dTotalDataCount[j].diagnosis);
                        console.log("---");
                        console.log(dDataSet[i].diagnosis);
                        if(dTotalDataCount[j].diagnosis.toLowerCase()==dDataSet[i].diagnosis.toLowerCase()){
                            dSets.push({
                                label: dDataSet[i].diagnosis,   
                                borderColor: diseaseColors[i],
                                backgroundColor: diseaseColors[i],
                                data:dDataSet[i].count,
                            })
                        }
                    }
                };
            }

            
            //------------------STUFF OF SYMPTOMS LINE CHART------------------
            console.log("VISIT REASON PARTS");
            //create array for concern dataset
            for(i=0;i<data.length;i++){
                alreadyAdded=0
                if(cDataSet==null){ //if empty auto add
                    if(data[i].visitReason!="" && data[i].visitReason!=undefined && data[i].visitReason!=null){
                        console.log(data[i].visitReason);
                        checkSeparation=data[i].visitReason.split(", ");
                        for(s=0;s<checkSeparation.length;s++){
                            cDataSet.push({
                                visitReason:checkSeparation[s],
                                dates: dateLabels,
                                count: [parseInt("0")]
                            })
                            cTotalDataCount.push({
                                visitReason:checkSeparation[s],
                                count: parseInt("0")
                            })
                        }                         
                    }
                }
                else{ //if not empty
                    if(data[i].visitReason!="" && data[i].visitReason!=undefined && data[i].visitReason!=null){
                        checkSeparation=data[i].visitReason.split(", ");
                        for(s=0;s<checkSeparation.length;s++){
                            alreadyAdded=0;
                             for(j=0;j<cDataSet.length;j++){ //this whole thing is used to check if it has a count
                                if(cDataSet[j].visitReason.toLowerCase()==checkSeparation[s].toLowerCase()){
                                    alreadyAdded=1;
                                }
                            }
                            if(alreadyAdded==0){
                                cDataSet.push({
                                    visitReason:checkSeparation[s],
                                    dates: dateLabels,
                                    count: [parseInt("0")]
                                })
                                cTotalDataCount.push({
                                    visitReason:checkSeparation[s],
                                    count: parseInt("0")
                                })
                            }
                        }                        
                    }
                }
            }

            for(i=0;i<cDataSet.length;i++){
                for(j=1;j<dateLabels.length;j++){
                    cDataSet[i].count.push(parseInt("0"));
                }
            }
            
            console.log(data);
            console.log(cDataSet);
            for(i=0;i<data.length;i++){
                if(data[i].visitReason!="" && data[i].visitReason!=undefined && data[i].visitReason!=null){
                    checkSeparation=data[i].visitReason.split(", ");
                    separationCount=checkSeparation.length;
                    for(s=0;s<separationCount;s++){
                        for(k=0;k<dateLabels.length;k++){
                            if(data[i].visitDate==dateLabels[k]){
                                for(cCounter=0;cCounter<cDataSet.length;cCounter++){
                                    if(cDataSet[cCounter].visitReason == checkSeparation[s]){
                                        cDataSet[cCounter].count[k]=cDataSet[cCounter].count[k]+1;
                                        cTotalDataCount[cCounter].count=cTotalDataCount[cCounter].count+1;
                                    }
                                }
                            }
                        
                        }
                    }
                }
            }
            
            cTotalDataCount= cTotalDataCount.sort(function (x, y) {
                return y.count- x.count;
            });

            console.log("Check:");
            console.log(cTotalDataCount);
            console.log(cDataSet);

            if(cTotalDataCount.length<=5){
                for(i=0;i<cDataSet.length;i++){
                    for(j=0;j<cTotalDataCount.length;j++){
                        console.log(cTotalDataCount[j].visitReason);
                        console.log("---");
                        console.log(cDataSet[i].visitReason);
                        if(cTotalDataCount[j].visitReason.toLowerCase()==cDataSet[i].visitReason.toLowerCase()){
                            cSets.push({
                                label: cDataSet[i].visitReason,   
                                borderColor: complaintsColor[j],
                                backgroundColor: complaintsColor[j],
                                data:cDataSet[i].count,
                            })
                            console.log("complaintsColor[i]1");
                            console.log(complaintsColor[i]);
                        }
                    }
                }
            }
            else{
                for(i=0;i<cDataSet.length;i++){
                    for(j=0;j<5;j++){
                        console.log(cTotalDataCount[j].visitReason);
                        console.log("---");
                        console.log(cDataSet[i].visitReason);
                        if(cTotalDataCount[j].visitReason.toLowerCase()==cDataSet[i].visitReason.toLowerCase()){
                            cSets.push({
                                label: cDataSet[i].visitReason,   
                                borderColor: complaintsColor[j],
                                backgroundColor: complaintsColor[j],
                                data:cDataSet[i].count,
                            })
                            console.log("complaintsColor[i]2");
                            console.log(complaintsColor[i]);
                        }
                    }
                };
            }



            ////------------------SHOWING OF CHARTS------------------
            var dTrend={
                labels: dateLabels,
                datasets: dSets,
            };      
            var cTrend={
                labels: dateLabels,
                datasets: cSets,
            };
            var config={
                type: 'line',
                data: dTrend,
                plugins: [ChartDataLabels],
                options: {
                    maintainAspectRatio: false,
                    plugins: {
                        datalabels: {
                            anchor: 'end',
                            align: 'top',
                            offset: 5,
                            font: {
                                weight: 'bold'
                            }
                        },
                        title: {
                            display: true,
                            text: 'Top 5 Disease Trend from '+ startRange + ' to ' + endRange,
                            font: {
                                size: 25   // font size of the labels
                            },
                        },
                        legend: {
                            display: true,
                        }
                    },
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Days',
                                font: {
                                    size: 15,   // font size of the labels
                                    weight: 'bold'
                                },
                            },
                            ticks: {
                                font: {
                                    size: 15   // font size of the labels
                                }
                            }
                        },
                        y: {
                            ticks: {
                                font: {
                                    size: 12   // font size of the labels
                                },
                                stepSize: 5
                            }
                        },
                    }              
                }
            }
            var config2={
                type: 'line',
                data: cTrend,
                plugins: [ChartDataLabels],
                options: {
                    maintainAspectRatio: false,
                    plugins: {
                        datalabels: {
                            anchor: 'end',
                            align: 'top',
                            offset: 5,
                            font: {
                                weight: 'bold'
                            }
                        },
                        title: {
                            display: true,
                            text: 'Top 5 Complaints Trend from '+ startRange + ' to ' + endRange,
                            font: {
                                size: 25   // font size of the labels
                            },
                        },
                        legend: {
                            display: true,
                        }
                    },
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Days',
                                font: {
                                    size: 15,   // font size of the labels
                                    weight: 'bold'
                                },
                            },
                            ticks: {
                                font: {
                                    size: 15   // font size of the labels
                                }
                            }
                        },
                        y: {
                            ticks: {
                                font: {
                                    size: 12   // font size of the labels
                                },
                                stepSize: 5
                            }
                        },
                    }              
                }
            }  

            var diseaseTrend = document.getElementById("diseaseTrendChart");
            diseaseTrendChart = new Chart(diseaseTrend, config); 
            var concernTrend = document.getElementById("concernTrendChart");
            concernTrendChart = new Chart(concernTrend, config2); 


            
        }
        

        $('#reportrange').daterangepicker({
            startDate: start,
            endDate: end,
            ranges: {
            'Today': [moment(), moment()],
            'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
            'Last 7 Days': [moment().subtract(6, 'days'), moment()],
            'Last 30 Days': [moment().subtract(29, 'days'), moment()],
            'This Month': [moment().startOf('month'), moment().endOf('month')],
            'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        }, cb);


    
    </script>


</body>

</html>