<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>IsKlinika</title>

    <!-- Custom fonts for this template -->
    <link href="public/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="public/css/sb-admin-2.min.css" rel="stylesheet">

    <!-- Custom styles for this page -->
    <link href="public/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />


    <style>
        .clickable-row {
            cursor: pointer;
        }

        #reportrange{
            display: inline-block;
            width: 100%;
            height: calc(1.5em + 0.75rem + 2px);
            padding: 0.375rem 1.75rem 0.375rem 0.75rem;
            font-size: 1rem;
            font-weight: 400;
            line-height: 1.5;
            color: #6e707e;
            vertical-align: middle;
            background: #ffff;
            border: 1px solid #d1d3e2;
            border-radius: 0.35rem;
        }
    </style>

</head>

<body id="page-top">
    <!-- Page Wrapper -->
    <div id="wrapper">

        <!-- Sidebar -->
        <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

            <!-- Sidebar - Brand -->
            <a class="sidebar-brand d-flex align-items-center justify-content-center" href="/dashboard" style="pointer-events: none; cursor: default;">
                <div class="sidebar-brand-icon rotate-n-15">
                    <i class="fas fa-user-md"></i>
                </div>
                <div class="sidebar-brand-text mx-3 text-capitalize">IsKlinika</div>
            </a>
            
            <!-- Divider -->
            <hr class="sidebar-divider my-0">

            {{#if isNurse}}
                <!-- Nav Item - Clinic Visit -->
                <li class="nav-item">
                    <a class="nav-link" href="/clinic-visit">
                        <i class="fas fa-fw fa-medkit"></i>
                        <span>Clinic Visit</span></a>
                </li>

                <!-- Nav Item - Profile -->
                <li class="nav-item">
                    <a class="nav-link" href="/profile">
                        <i class="fas fa-fw fa-user"></i>
                        <span>Student Profile</span></a>
                </li>

                <!-- Nav Item - Health Assessment -->
                <li class="nav-item">
                    <a class="nav-link" href="/health-assessment">
                        <i class="fas fa-fw fa-stethoscope"></i>
                        <span>Health Assessment</span></a>
                </li>

                <!-- Nav Item - Inventory -->
                <li class="nav-item">
                    <a href="#inventory" data-toggle="collapse" aria-expanded="false" class="dropdown-toggle nav-link">
                        <i class="fas fa-fw fa-archive"></i>
                        <span>Inventory</span></a>
                    <ul class="collapse list-unstyled" id="inventory">
                        <li>
                            <a class="nav-link" href="/inventory-medicine">
                                <i class="fas fa-fw fa-tablets"></i>
                                <span>Medicine</span></a>
                        </li>
                        <li>
                            <a class="nav-link" href="/inventory-supply">
                                <i class="fas fa-fw fa-pump-medical"></i>
                                <span>Supply</span></a>
                        </li>
                        <li>
                            <a class="nav-link" href="/inventory-dental">
                                <i class="fas fa-fw fa-tooth"></i>
                                <span>Dental</span></a>
                        </li>
                    </ul>
                </li>

                <!-- Nav Item - Promotive Care -->
                <li class="nav-item">
                    <a class="nav-link" href="/promotive-care">
                        <i class="fas fa-fw fa-child"></i>
                        <span>Promotive Care</span></a>
                </li>

                <!-- Nav Item - Performance Assessment -->
                <li class="nav-item">
                    <a class="nav-link" href="/performance-assessment">
                        <i class="fas fa-fw fa-star"></i>
                        <span>Performance Assessment</span></a>
                </li>

                <!-- Nav Item - Communications -->
                <li class="nav-item">
                    <a class="nav-link" href="/communications">
                        <i class="fas fa-fw fa-comments"></i>
                        <span>Communications</span></a>
                </li>
            {{else}}

            <!-- Nav Item - Dashboard -->
            <li class="nav-item">
                <a class="nav-link" href="/dashboard">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>Dashboard</span></a>
            </li>
            
            <!-- Nav Item - Disease Surveillance -->
            <li class="nav-item">
                <a class="nav-link" href="/disease-surveillance">
                    <i class="fas fa-fw fa-virus"></i>
                    <span>Disease Surveillance</span></a>
            </li>

            <!-- Nav Item - Clinic Visit -->
            <li class="nav-item active">
                <a class="nav-link" href="/clinic-visit">
                    <i class="fas fa-fw fa-medkit"></i>
                    <span>Clinic Visit</span></a>
            </li>

            <!-- Nav Item - Profile -->
            <li class="nav-item">
                <a class="nav-link" href="/profile">
                    <i class="fas fa-fw fa-user"></i>
                    <span>Student Profile</span></a>
            </li>

            <!-- Nav Item - Health Assessment -->
            <li class="nav-item">
                <a class="nav-link" href="/health-assessment">
                    <i class="fas fa-fw fa-stethoscope"></i>
                    <span>Health Assessment</span></a>
            </li>

            <!-- Nav Item - Inventory -->
            <li class="nav-item">
                <a href="#inventory" data-toggle="collapse" aria-expanded="false" class="dropdown-toggle nav-link">
                    <i class="fas fa-fw fa-archive"></i>
                    <span>Inventory</span></a>
                <ul class="collapse list-unstyled" id="inventory">
                    <li>
                        <a class="nav-link" href="/inventory-medicine">
                            <i class="fas fa-fw fa-tablets"></i>
                            <span>Medicine</span></a>
                    </li>
                    <li>
                        <a class="nav-link" href="/inventory-supply">
                            <i class="fas fa-fw fa-pump-medical"></i>
                            <span>Supply</span></a>
                    </li>
                    <li>
                        <a class="nav-link" href="/inventory-dental">
                            <i class="fas fa-fw fa-tooth"></i>
                            <span>Dental</span></a>
                    </li>
                </ul>
            </li>

            <!-- Nav Item - Promotive Care -->
            <li class="nav-item">
                <a class="nav-link" href="/promotive-care">
                    <i class="fas fa-fw fa-child"></i>
                    <span>Promotive Care</span></a>
            </li>

            <!-- Nav Item - Performance Assessment -->
            <li class="nav-item">
                <a class="nav-link" href="/performance-assessment">
                    <i class="fas fa-fw fa-star"></i>
                    <span>Performance Assessment</span></a>
            </li>

            <!-- Nav Item - Communications -->
            <li class="nav-item">
                <a class="nav-link" href="/communications">
                    <i class="fas fa-fw fa-comments"></i>
                    <span>Communications</span></a>
            </li>

            {{/if}}

            <!-- Divider -->
            <hr class="sidebar-divider d-none d-md-block">

            <!-- Sidebar Toggler (Sidebar) -->
            <div class="text-center d-none d-md-inline">
                <button class="rounded-circle border-0" id="sidebarToggle"></button>
            </div>

        </ul>
        <!-- End of Sidebar -->

        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">

            <!-- Main Content -->
            <div id="content">

                <!-- Topbar -->
                <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">

                    <!-- Sidebar Toggle (Topbar) -->
                    <form class="form-inline">
                        <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                            <i class="fa fa-bars"></i>
                        </button>
                    </form>

                    <!-- Topbar Navbar -->
                    <ul class="navbar-nav ml-auto">

                        <!-- Nav Item - Search Dropdown (Visible Only XS) -->
                        <li class="nav-item dropdown no-arrow d-sm-none">
                            <a class="nav-link dropdown-toggle" href="#" id="searchDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-search fa-fw"></i>
                            </a>
                            <!-- Dropdown - Messages -->
                            <div class="dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in"
                                aria-labelledby="searchDropdown">
                                <form class="form-inline mr-auto w-100 navbar-search">
                                    <div class="input-group">
                                        <input type="text" class="form-control bg-light border-0 small"
                                            placeholder="Search for..." aria-label="Search"
                                            aria-describedby="basic-addon2">
                                        <div class="input-group-append">
                                            <button class="btn btn-primary" type="button">
                                                <i class="fas fa-search fa-sm"></i>
                                            </button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </li>
                        
                        {{>notifications}}

                        <div class="topbar-divider d-none d-sm-block"></div>

                        <!-- Nav Item - User Information -->
                        <li class="nav-item dropdown no-arrow">
                            <a class="nav-link dropdown-toggle" href="#drop-menu" id="userDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="mr-2 d-none d-lg-inline text-gray-600 small">Welcome, {{user.firstName}} {{user.lastName}}!</span>
                                <img class="img-profile rounded-circle"
                                    src="public/img/undraw_profile.svg">
                            </a>
                            <!-- Dropdown - User Information -->
                            <div id="drop-menu" class="dropdown-menu dropdown-menu-right shadow animated--grow-in"
                                aria-labelledby="userDropdown">
                                <a class="dropdown-item" href="#">
                                    <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Profile
                                </a>
                                <a class="dropdown-item" href="#">
                                    <i class="fas fa-cogs fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Settings
                                </a>
                                <a class="dropdown-item" href="#">
                                    <i class="fas fa-list fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Activity Log
                                </a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="" data-toggle="modal" data-target="#logoutModal">
                                    <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Logout
                                </a>
                            </div>
                        </li>

                    </ul>

                </nav>
                <!-- End of Topbar -->

                <!-- Begin Page Content -->
                <div class="container-fluid">

                    <!-- Page Heading -->
                    <div class="d-sm-flex align-items-center justify-content-between mb-4">
                        <h1 class="h3 mb-0 text-gray-800">Clinic Visit Report</h1>
                    </div>
                    {{#if success}}
                        <div class="alert alert-danger alert-dismissible d-flex align-items-center fade show" style="font-size: 12px; !important" id="error">
                            <i class="fa fa-exclamation-circle"></i>
                            <strong class="mx-1">Success!</strong> {{success_msg}}
                        </div>
                    {{/if}}

                    <div class="row">
                        <div class="col-4 mb-4">
                            <div id="reportrange">
                                <i class="fa fa-calendar"></i>&nbsp;
                                <span></span> <i class="fa fa-caret-down"></i>
                            </div>
                        </div> 
                        <div class="col-2 mb-4">
                            <select class="custom-select" id="groupBy" name="groupBy">
                                <option disabled="disabled" selected="true">Group by</option>
                                <option value="daily">Daily</option>
                                <option value="monthly">Monthly</option>
                                <option value="yearly">Yearly</option>
                            </select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xl-12 col-lg-12">
                            <div class="card shadow mb-4">
                                <div class="card-header py-3">
                                    <h6 class="m-0 font-weight-bold text-primary">Clinic Visits Trend</h6>
                                </div>
                                <div class="card-body" >
                                    <div class="chart-bar">
                                        <canvas id="dailyVisits"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-xl-12 col-lg-12">
                            <div class="card shadow mb-4">
                                <div class="card-header py-3">
                                    <h6 class="m-0 font-weight-bold text-primary">Clinic Visits Count</h6>
                                </div>
                                <div class="card-body" >
                                    <div class="chart-bar">
                                        <canvas id="clinicVisitsBar"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <!-- Area Chart -->
                        <div class="col-xl-8 col-lg-8">
                            <div class="card shadow mb-4">
                                <!-- Card Header - Dropdown -->
                                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                    <h6 class="m-0 font-weight-bold text-primary">Incidence Report Count</h6>
                                </div>
                                <!-- Card Body -->
                                <div class="card-body">
                                    <div class="chart-area">
                                        <canvas id="incidenceBar"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Pie Chart -->
                        <div class="col-xl-4 col-lg-4">
                            <div class="card shadow mb-4">
                                <!-- Card Header - Dropdown -->
                                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                    <h6 class="m-0 font-weight-bold text-primary">Incidence Report Percentage</h6>
                                </div>

                                <!-- Pie Chart -->
                                <div class="card-body" style="height: 360px">
                                    <div class="chart-pie pt-6 pb-2" style="width: 500px">
                                        <canvas id="incidencePie"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- End of Main Content -->
            
            <!-- Footer -->
            <footer class="sticky-footer bg-white">
                <div class="container my-auto">
                    <div class="copyright text-center my-auto">
                        <span>Copyright &copy; IsKlinika 2021</span>
                    </div>
                </div>
            </footer>
            <!-- End of Footer -->

        </div>
        <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    <!-- Logout Modal-->
    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                    <form method="post" action="/logout">
                        <button class="btn btn-primary">Logout</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap core JavaScript-->
    <script src="public/vendor/jquery/jquery.min.js"></script>
    <script src="public/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="public/vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="public/js/sb-admin-2.min.js"></script>

    <!-- Page level plugins -->
    <script src="public/vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="public/vendor/datatables/dataTables.bootstrap4.min.js"></script>
    
    <!-- Page level custom scripts -->
    <script src="public/js/demo/datatables-demo.js"></script>

    <!-- Page level custom scripts -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>
    <script src="https://unpkg.com/chart.js-plugin-labels-dv/dist/chartjs-plugin-labels.min.js"></script>
    
    <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>


    <script>
        var index = "{{@index}}";
        var forms =  [];
        forms = '{{{clinicVisitForms}}}';
        console.log(forms);
        for(var i = 0; i < forms.length; i++)
        {
            console.log(forms[i]);
        }
        var clinicianDesc = "{{forms.index.desc}}"
        console.log(clinicianDesc);

        $(document).on('click', '.clickable-row', function(e){
            window.location = "/clinic-visit/create";
        });

        $(document).ready(function() {
            var startRange, endRange;
            const now = new Date();
            var year = now.getFullYear();
            var month = now.getMonth();
            var start, end;

            var selectedGroup =  $('#groupBy').find('option:selected').val();;
            

            $('#groupBy').change(function(){
                selectedGroup = $('#groupBy').find('option:selected').val();
                console.log("Malfoy");
                console.log(selectedGroup);
                cb(start,end)
            });
            //var start = moment().subtract(29, 'days');
            //var end = moment();

            if(month < 3){
                getMonthDateRange(year-1);  
            }
            else if(month >= 3){
                getMonthDateRange(year);  
            }

            function getMonthDateRange(year) {
                //var moment = require('moment');

                month = 2;

                // month in moment is 0 based, so 9 is actually october, subtract 1 to compensate
                // array is 'year', 'month', 'day', etc
                start = moment([year, 5]);

                // Clone the value before .endOf()
                end = moment([year + 1, 2]).endOf('month');

                // make sure to call toDate() for plain JavaScript date type
                console.log(start.toDate());
                console.log(end.toDate());

                var getStart = new Date(start);
                var getStartMonth = getStart.toLocaleString('default', { month: 'long' })
                startRange = getStartMonth + ' ' + getStart.getDate() + ', ' + getStart.getFullYear();

                var getEnd = new Date(end);
                var getEndMonth = getEnd.toLocaleString('default', { month: 'long' })
                endRange = getEndMonth + ' ' + getEnd.getDate() + ', ' + getEnd.getFullYear();

                console.log("start Range "+startRange);
                console.log("end Range "+endRange);

                cb(start, end);
            }
            
            $('#reportrange').daterangepicker({
                startDate: start,
                endDate: end,
                ranges: {
                'Today': [moment(), moment()],
                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);

            var checker1 = false;
            var clinicVisitsChart;
            var clinicVisitsBarChart;

            var checker2 = false;
            var incidenceCountBarChart;
            var incidenceCountPieChart;            

            function cb(start, end) {
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
                console.log("START " + start.format('YYYY-MM-DD'));
                console.log("END " + end.format('YYYY-MM-DD'));
                console.log(selectedGroup);
                $.get("/getAllVisits", function(data){
                    console.log(data);
                    console.log("HELLO");
                    console.log("Hermione"+ selectedGroup);
                    var choice = selectedGroup;

                    if(checker1){
                        clinicVisitsChart.destroy();
                        clinicVisitsBarChart.destroy();
                    }

                    showDailyVisits(data, start, end);
                    showVisitsReport(data, choice, start, end);
                    checker1 = true;
                });

                var startDate = new Date(start);
                var endDate = new Date(end);

                $.get('/getIncidenceCount', {start: startDate, end: endDate}, function(result){
                    console.log("inside");
                    console.log(result);
                    omissionCount = result.omissionCount;
                    delayCount = result.delayCount;
                    ineffectiveCount = result.ineffectiveCount;
                    interactionCount = result.interactionCount;
                    allergyCount = result.allergyCount;
                    noStockCount = result.noStockCount;
                    expiredCount = result.expiredCount;

                    if(checker2){
                        incidenceCountBarChart.destroy();
                        incidenceCountPieChart.destroy();
                    }

                    incidenceBarChart(omissionCount, delayCount, ineffectiveCount, interactionCount, allergyCount, noStockCount, expiredCount);
                    incidencePieChart(omissionCount, delayCount, ineffectiveCount, interactionCount, allergyCount, noStockCount, expiredCount);
                    checker2 = true;

                });
            }

            function showDailyVisits(data, start, end){
                var startDate = new Date(start);
                var startMonth = startDate.getMonth();
                var startYear = startDate.getFullYear();
                var endDate = new Date(end);
                var endMonth = endDate.getMonth();
                var endYear = endDate.getFullYear();
                var monthNames = [];
                var parts=[], dataDate;

                var i,j;
                var monthsRange=[],schoolYear=[];
                var count=[];

                //get the months in the time range
                if(startYear==endYear){
                    for(i=startMonth;i<=endMonth;i++){
                        monthsRange.push(i);
                        schoolYear.push(startYear);
                    }
                }
                else if(startYear<endYear){
                    for(i=startMonth;i<12;i++){
                        monthsRange.push(i);
                        schoolYear.push(startYear);
                    }
                    for(i=0;i<=endMonth;i++){
                        monthsRange.push(i);
                        schoolYear.push(endYear);
                    }
                }
                console.log(monthsRange);

                for(i = 0; i < monthsRange.length; i++){
                    if(monthsRange[i] == 5)
                        monthNames.push("June " + schoolYear[i]);
                    if(monthsRange[i] == 6)
                        monthNames.push("July " + schoolYear[i]);
                    if(monthsRange[i] == 7)
                        monthNames.push("August " + schoolYear[i]);
                    if(monthsRange[i] == 8)
                        monthNames.push("September " + schoolYear[i]);
                    if(monthsRange[i] == 9)
                        monthNames.push("October " + schoolYear[i]);
                    if(monthsRange[i] == 10)
                        monthNames.push("November " + schoolYear[i]);
                    if(monthsRange[i] == 11)
                        monthNames.push("December " + schoolYear[i]);
                    if(monthsRange[i] == 0)
                        monthNames.push("January " + schoolYear[i]);
                    if(monthsRange[i] == 1)
                        monthNames.push("February " + schoolYear[i]);
                    if(monthsRange[i] == 2)
                        monthNames.push("March " + schoolYear[i]);
                    if(monthsRange[i] == 3)
                        monthNames.push("April " + schoolYear[i]);
                    if(monthsRange[i] == 4)
                        monthNames.push("May " + schoolYear[i]);
                }

                //initialize the counts to 0 dependent on number of months in date range
                for(i=0;i<monthsRange.length;i++){
                    count.push(parseInt("0"));
                }

                console.log(data);
                for(i=0;i<data.length;i++){
                    parts=data[i].visitDate.split("-"); // 2021-01-03    2021 01 03
                    dataDate= new Date(parts[0], parts[1]-1, parts[2]);   // year, month, day
                    if(startDate <= dataDate && dataDate <= endDate){
                        for(j=0;j<monthsRange.length;j++){
                            if(dataDate.getMonth() == monthsRange[j]){
                                count[j]=count[j]+1;  
                            }
                        }
                    }
                }
                
                var clinicVisitsBarId = document.getElementById("clinicVisitsBar");
                clinicVisitsBarChart = new Chart(clinicVisitsBarId, {  // line chart
                    type: 'bar',
                    data: {
                        labels: monthNames, // x-axis
                        datasets: [{
                            backgroundColor: [  // background color of the thing
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(153, 102, 255, 0.2)',
                                'rgba(255, 159, 64, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            borderWidth: 3,
                            data: count
                        }],
                    },
                    options: {
                        maintainAspectRatio: false,
                        plugins: {
                            labels: {
                                render: 'value',
                                fontSize: 15,
                                fontStyle: 'bold',
                            },
                            legend: {
                                display: false,
                            },
                            title: {
                                display: true,
                                text: 'Clinic Visits from ' + startRange + " to " + endRange,
                                font: {
                                    size: 25   // font size of the labels
                                },
                            }
                        },
                        scales: {
                            x: {
                                title: {
                                    display: true,
                                    text: 'Month',
                                    font: {
                                        size: 15,   // font size of the labels
                                        weight: 'bold'
                                    },
                                },
                                ticks: {
                                    font: {
                                        size: 15   // font size of the labels
                                    },
                                }
                            },
                            y: {
                                stepSize: 5,
                            }
                        },
                    }
                });
                clinicVisitsBarChart.update();
            }

            var i;
            var omissionCount, delayCount, ineffectiveCount, interactionCount, allerg

            function incidenceBarChart(omissionCount, delayCount, ineffectiveCount, interactionCount, allergyCount, noStockCount, expiredCount){
                var incidenceBar = document.getElementById("incidenceBar");
                incidenceCountBarChart = new Chart(incidenceBar, {  // line chart
                    type: 'bar',
                    data: {
                        labels: ['Dose Omission', 'Dose Delay', 'Ineffective Dose', 'Drug Interaction', 'Drug Allergy', 'Inadequate Stock', 'Expired Stock'], // x-axis
                        datasets: [{
                            backgroundColor: [  // background color of the thing
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(153, 102, 255, 0.2)',
                                'rgba(255, 159, 64, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            borderWidth: 3,
                            data: [omissionCount, delayCount, ineffectiveCount, interactionCount, allergyCount, noStockCount, expiredCount]
                        }],
                    },
                    options: {
                        maintainAspectRatio: false,
                        plugins: {
                            labels: {
                                render: 'value',
                                fontSize: 15,
                                fontStyle: 'bold',
                            },
                            legend: {
                                display: false,
                            },
                            title: {
                                display: true,
                                text: 'Incidence Reports from ' + startRange + " to " + endRange,
                                font: {
                                    size: 25   // font size of the labels
                                },
                            }
                        },
                        scales: {
                            x: {
                                title: {
                                    display: true,
                                    text: 'Incidence Type',
                                    font: {
                                        size: 15,   // font size of the labels
                                        weight: 'bold'
                                    },
                                },
                                ticks: {
                                    font: {
                                        size: 15   // font size of the labels
                                    },
                                    stepSize: 5
                                }
                            }
                        },
                    }
                });
            }

            function incidencePieChart(omissionCount, delayCount, ineffectiveCount, interactionCount, allergyCount, noStockCount, expiredCount){
                var incidencePie = document.getElementById("incidencePie");
                incidenceCountPieChart = new Chart(incidencePie, {  // pie chart
                    type: 'pie',
                    data: {
                        labels: ['Dose Omission', 'Dose Delay', 'Ineffective Dose', 'Drug Interaction', 'Drug Allergy', 'Inadequate Stock', 'Expired Stock'],
                        datasets: [{
                            backgroundColor: [  // background color of the thing
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            data: [omissionCount, delayCount, ineffectiveCount, interactionCount, allergyCount, noStockCount, expiredCount]
                        }],
                    },
                    options: {
                        maintainAspectRatio: false,
                        layout: {   // layout ng entire chart
                            padding: {
                                left: 30,
                                right: 25,
                                top: 0,
                                bottom: 0,
                            }
                        },
                        plugins: {
                            labels: {
                                fontSize: 15,
                                fontStyle: 'bold',
                                render: (context) => {
                                    const percentage = context.value / computeIncidencePercent(this) * 100;
                                    return percentage.toFixed(2)+"%";
                                },
                                fontColor: '#000000',
                                position: 'outside'
                            },
                            legend: {
                                display: true,
                                position: 'right',
                            }
                        }
                    }
                });
            }

            function computeIncidencePercent(){
                let totalSum = 0;
                let i = 0;

                for(i = 0; i < incidenceCountPieChart.config.data.datasets[0].data.length; i++){
                    if(incidenceCountPieChart.getDataVisibility(i) === true){
                        totalSum += incidenceCountPieChart.config.data.datasets[0].data[i];
                    }
                }
                return totalSum;
            }
            
        //var formIds = [];

        //getNotification();
        //setInterval(function(){ getNotification(); }, 3000);

        //function getNotification() {
        //    $.get("/getNotification", function(notifs){
        //        console.log("notifs in front-end");
        //        console.log(notifs);
        //        var i;
        //        var count = 0;
                
        //        formIds = [];
                
        //        $('#userID').val(notifs[notifs.length-1].user); // user key
        //        for(i = 0; i < notifs.length; i++){
        //            if(notifs[i].seen == true){
        //                $('#notifList').empty();
        //                break;
        //            }
        //        }
                // getting list of notifications
        //        for(i = 0; i < notifs.length; i++){
                    // the if else statement for the display if seen or not
        //            if(notifs[i].seen == true){
        //                $('#notifList').append('<a class="dropdown-item d-flex align-items-center" href="/clinic-visit"><div style="height: 40px;"><span class="badge badge-pill badge-danger d-flex align-items-baseline" style="visibility: hidden; background-color: #ffff; color: #ffff; font-size:5px;">.</span></div><div class="mr-3"><div class="icon-circle bg-primary"><i class="fas fa-file-alt text-white"></i></div></div><div><div class="small text-gray-500">' + notifs[i].date + '</div><span class="font-weight-bold">'+ notifs[i].message + '</span></div></a>');

        //            } else {
        //                $('#notifList').append('<a class="dropdown-item d-flex align-items-center" href="/clinic-visit"><div style="height: 40px;"><span class="badge badge-pill badge-danger d-flex align-items-baseline" style="color: #e74a3b; font-size:5px;">.</span></div><div class="mr-3"><div class="icon-circle bg-primary"><i class="fas fa-file-alt text-white"></i></div></div><div><div class="small text-gray-500">' + notifs[i].date + '</div><span class="font-weight-bold">'+ notifs[i].message + '</span></div></a>');
        //                count++;  // notififcation count
        //            }
                    // put key value of forms 
        //            formIds.push(notifs[i].formId);
        //        }
        //        console.log(formIds);

        //        $('#notifCount').text(count);
        //        if (count == 0){
        //            var notifHide =  $('#notifCount');
        //            notifHide.remove();
        //        } 
        //    });
        //};

        //
            
            function showVisitsReport(data,choice, start,end){
                var startDate = new Date(start);
                var startMonth = startDate.getMonth();
                var startYear = startDate.getFullYear();
                var endDate = new Date(end);
                var endMonth = endDate.getMonth();
                var endYear = endDate.getFullYear();
                var monthNames = [];
                var parts=[], dataDate;
                var m,tempDateCompare;
                var i,j;
                var monthsRange=[],schoolYear=[];
                var yearRange=[]
                var count=[];
                var year;

                var range=[];



                //------------------IF USER WANTS TO SEE COUNT BY YEAR------------------
                if(choice == "yearly" || choice=="Yearly"){
                    year=startYear
                    while(year!=endYear){
                        range.push(year);
                        count.push(0);
                        year++;
                    }
                    if(year=endYear){
                        range.push(endYear);
                        count.push(0);
                    }

                    for(i=0;i<data.length;i++){
                        parts=data[i].visitDate.split("-");
                        for(j=0;j<range.length;j++){
                            if(parts[0]==range[j]){
                                count[j]=count[j]+1;
                            }
                        }                    
                    }
                }
                //------------------IF USER WANTS TO SEE COUNT BY MONTH------------------
                else if(choice == "monthly" || choice=="Monthly"){
                    
                    //get the months in the time range
                    if(startYear==endYear){
                        for(i=startMonth;i<=endMonth;i++){
                            monthsRange.push(i);
                            schoolYear.push(startYear);
                        }
                    }
                    else if(startYear<endYear){
                        for(i=startMonth;i<12;i++){
                            monthsRange.push(i);
                            schoolYear.push(startYear);
                        }
                        for(i=0;i<=endMonth;i++){
                            monthsRange.push(i);
                            schoolYear.push(endYear);
                        }
                    }

                    for(i = 0; i < monthsRange.length; i++){
                        if(monthsRange[i] == 5){
                            range.push("June " + schoolYear[i]);
                            count.push(0);
                        }
                        if(monthsRange[i] == 6){
                            range.push("July " + schoolYear[i]);
                            count.push(0);
                        }
                        if(monthsRange[i] == 7){
                            range.push("August " + schoolYear[i]);
                            count.push(0);
                        }
                        if(monthsRange[i] == 8){
                            range.push("September " + schoolYear[i]);
                            count.push(0);
                        }
                        if(monthsRange[i] == 9){
                            range.push("October " + schoolYear[i]);
                            count.push(0);
                        }
                        if(monthsRange[i] == 10){
                            range.push("November " + schoolYear[i]);
                            count.push(0);
                        }
                        if(monthsRange[i] == 11){
                            range.push("December " + schoolYear[i]);
                            count.push(0);
                        }
                        if(monthsRange[i] == 0){
                            range.push("January " + schoolYear[i]);
                            count.push(0);
                        }
                        if(monthsRange[i] == 1){
                            range.push("February " + schoolYear[i]);
                            count.push(0);
                        }
                        if(monthsRange[i] == 2){
                            range.push("March " + schoolYear[i]);
                            count.push(0);
                        }
                        if(monthsRange[i] == 3){
                            range.push("April " + schoolYear[i]);
                            count.push(0);
                        }
                        if(monthsRange[i] == 4){
                            range.push("May " + schoolYear[i]);
                            count.push(0);
                        }
                    }
                    
                    for(i=0;i<data.length;i++){
                        parts=data[i].visitDate.split("-");
                        if(parts[1]==1)
                            m="January ";
                        else if(parts[1]==2)
                            m="February ";
                        else if(parts[1]==3)
                            m="March ";
                        else if(parts[1]==4)
                            m="April ";
                        else if(parts[1]==5)
                            m="May ";
                        else if(parts[1]==6)
                            m="June ";
                        else if(parts[1]==7)
                            m="July ";
                        else if(parts[1]==8)
                            m="August ";
                        else if(parts[1]==9)
                            m="September ";
                        else if(parts[1]==10)
                            m="October ";
                        else if(parts[1]==11)
                            m="November ";
                        else if(parts[1]==12)
                            m="December ";

                        tempDateCompare= m + parts[0];
                        console.log(tempDateCompare);
                        for(j=0;j<range.length;j++){
                            if(tempDateCompare==range[j]){
                                count[j]=count[j]+1;
                            }
                        }  

                                          
                    }

                }
                //------------------IF USER WANTS TO SEE COUNT BY DAILY------------------
                else if(choice == "daily" || choice=="Daily"){
                    //gets all the date in the date monthsRange
                    while(startDate<=endDate){
                        //dateLabels.push(startDate.getFullYear() + "-" + (startDate.getMonth()+1) + "-" +startDate.getDate());
                        if(startDate.getDate()>=10 && (startDate.getMonth()+1)>=10){
                            range.push(startDate.getFullYear() + "-" + (startDate.getMonth()+1) + "-" +startDate.getDate())
                        }
                        else if(startDate.getDate()>=10 && (startDate.getMonth()+1)<10){
                            range.push(startDate.getFullYear() + "-0" + (startDate.getMonth()+1) + "-" +startDate.getDate())
                        }
                        else if(startDate.getDate()<10 && (startDate.getMonth()+1)>=10){
                            range.push(startDate.getFullYear() + "-" + (startDate.getMonth()+1) + "-0" +startDate.getDate())
                        }
                        else if(startDate.getDate()<10 && (startDate.getMonth()+1)<10){
                            range.push(startDate.getFullYear() + "-0" + (startDate.getMonth()+1) + "-0" +startDate.getDate())
                        }
                        
                        
                        startDate.setDate(startDate.getDate()+1);
                        count.push(0);
                    }

                    for(i=0;i<data.length;i++){
                        for(j=0;j<range.length;j++){
                            if(data[i].visitDate==range[j]){
                                count[j]=count[j]+1;
                            }
                        }                    
                    }


                }

                console.log("RANGE and COUNT:");
                console.log(range);
                console.log(count);

                var chartData={
                    labels: range, // x-axis
                    datasets: [{
                        label: "Visit Count",
                        lineTension: 0,
                        borderColor: "rgba(78, 115, 223, 1)",
                        backgroundColor: "rgba(78, 115, 223, 1)",
                        pointRadius: 3,
                        data: count,
                    }],
                };
                
                var config={
                    type: 'line',
                    data: chartData,
                    plugins: [ChartDataLabels],
                    options: {
                        maintainAspectRatio: false,
                        layout: {   // layout ng entire chart
                            padding: {
                                left: 30,
                                right: 25,
                                top: 0,
                                bottom: 0
                            }
                        },
                        plugins: {
                            datalabels: {
                                anchor: 'end',
                                align: 'top',
                                offset: 5,
                                font: {
                                    weight: 'bold'
                                }
                            },
                            title: {
                                display: true,
                                text: 'Clinic Visits',
                                font: {
                                    size: 25   // font size of the labels
                                },
                            },
                            legend: {
                                display: false,
                            }
                        },
                        scales: {
                            x: {
                                title: {
                                    display: true,
                                    text: 'Days',
                                    font: {
                                        size: 15,   // font size of the labels
                                        weight: 'bold'
                                    },
                                },
                                ticks: {
                                    font: {
                                        size: 15   // font size of the labels
                                    }
                                }
                            },
                            y: {
                                ticks: {
                                    font: {
                                        size: 15   // font size of the labels
                                    },
                                    stepSize: 5
                                }
                            },
                        }
                    }
                }

                var visitsChart = document.getElementById("dailyVisits");
                clinicVisitsChart = new Chart(visitsChart, config)


            }


        });
    </script>

</body>

</html>